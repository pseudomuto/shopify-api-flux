{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "Literal",
        "value": "use strict",
        "raw": "\"use strict\"",
        "range": [
          0,
          12
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 12
          }
        }
      },
      "range": [
        0,
        13
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 13
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Flux",
            "range": [
              22,
              26
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 7
              },
              "end": {
                "line": 3,
                "column": 11
              }
            }
          },
          "range": [
            22,
            26
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 7
            },
            "end": {
              "line": 3,
              "column": 11
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "flux",
        "raw": "\"flux\"",
        "range": [
          32,
          38
        ],
        "loc": {
          "start": {
            "line": 3,
            "column": 17
          },
          "end": {
            "line": 3,
            "column": 23
          }
        }
      },
      "range": [
        15,
        39
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 24
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "ObjectPattern",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "Dispatcher",
                  "range": [
                    49,
                    59
                  ],
                  "loc": {
                    "start": {
                      "line": 5,
                      "column": 8
                    },
                    "end": {
                      "line": 5,
                      "column": 18
                    }
                  }
                },
                "value": {
                  "type": "Identifier",
                  "name": "Dispatcher",
                  "range": [
                    49,
                    59
                  ],
                  "loc": {
                    "start": {
                      "line": 5,
                      "column": 8
                    },
                    "end": {
                      "line": 5,
                      "column": 18
                    }
                  }
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "computed": false,
                "range": [
                  49,
                  59
                ],
                "loc": {
                  "start": {
                    "line": 5,
                    "column": 8
                  },
                  "end": {
                    "line": 5,
                    "column": 18
                  }
                }
              }
            ],
            "range": [
              47,
              61
            ],
            "loc": {
              "start": {
                "line": 5,
                "column": 6
              },
              "end": {
                "line": 5,
                "column": 20
              }
            }
          },
          "init": {
            "type": "Identifier",
            "name": "Flux",
            "range": [
              64,
              68
            ],
            "loc": {
              "start": {
                "line": 5,
                "column": 23
              },
              "end": {
                "line": 5,
                "column": 27
              }
            }
          },
          "range": [
            47,
            68
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 6
            },
            "end": {
              "line": 5,
              "column": 27
            }
          }
        }
      ],
      "kind": "const",
      "range": [
        41,
        69
      ],
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 5,
          "column": 28
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * A generic action object that is dispatched by {APIDispatcher}\n *\n * @typedef {object} Action\n * @property {string} actionType - The type of action being dispatched\n ",
          "range": [
            71,
            245
          ],
          "loc": {
            "start": {
              "line": 7,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 3
            }
          }
        },
        {
          "type": "Block",
          "value": "*\n * An action object that is dispatched when items should be added to a store\n *\n * @typedef {object} MergeAction\n * @property {string} actionType - The type of action being dispatched\n * @property {Array<object>} items - An array of items to be added to the store\n ",
          "range": [
            247,
            518
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 0
            },
            "end": {
              "line": 20,
              "column": 3
            }
          }
        },
        {
          "type": "Block",
          "value": "*\n * An action object that is dispatched when counts should be added to a store\n *\n * @typedef {object} CountAction\n * @property {string} actionType - The type of action being dispatched\n * @property {number} count - The count returned from the API call\n * @property {ResourceQuery} [query] - The query params for the count call\n ",
          "range": [
            520,
            854
          ],
          "loc": {
            "start": {
              "line": 22,
              "column": 0
            },
            "end": {
              "line": 29,
              "column": 3
            }
          }
        },
        {
          "type": "Block",
          "value": "*\n * An action object the is dispatched when an object is destroyed\n *\n * @typedef {object} DestroyAction\n * @property {string} actionType - The type of action being dispatched\n * @property {number|string} id - The id of the destroyed resource\n ",
          "range": [
            856,
            1105
          ],
          "loc": {
            "start": {
              "line": 31,
              "column": 0
            },
            "end": {
              "line": 37,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportDefaultDeclaration",
      "declaration": {
        "type": "NewExpression",
        "callee": {
          "type": "Identifier",
          "name": "Dispatcher",
          "range": [
            1126,
            1136
          ],
          "loc": {
            "start": {
              "line": 39,
              "column": 19
            },
            "end": {
              "line": 39,
              "column": 29
            }
          }
        },
        "arguments": [],
        "range": [
          1122,
          1138
        ],
        "loc": {
          "start": {
            "line": 39,
            "column": 15
          },
          "end": {
            "line": 39,
            "column": 31
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * A generic action object that is dispatched by {APIDispatcher}\n *\n * @typedef {object} Action\n * @property {string} actionType - The type of action being dispatched\n ",
            "range": [
              71,
              245
            ],
            "loc": {
              "start": {
                "line": 7,
                "column": 0
              },
              "end": {
                "line": 12,
                "column": 3
              }
            }
          },
          {
            "type": "Block",
            "value": "*\n * An action object that is dispatched when items should be added to a store\n *\n * @typedef {object} MergeAction\n * @property {string} actionType - The type of action being dispatched\n * @property {Array<object>} items - An array of items to be added to the store\n ",
            "range": [
              247,
              518
            ],
            "loc": {
              "start": {
                "line": 14,
                "column": 0
              },
              "end": {
                "line": 20,
                "column": 3
              }
            }
          },
          {
            "type": "Block",
            "value": "*\n * An action object that is dispatched when counts should be added to a store\n *\n * @typedef {object} CountAction\n * @property {string} actionType - The type of action being dispatched\n * @property {number} count - The count returned from the API call\n * @property {ResourceQuery} [query] - The query params for the count call\n ",
            "range": [
              520,
              854
            ],
            "loc": {
              "start": {
                "line": 22,
                "column": 0
              },
              "end": {
                "line": 29,
                "column": 3
              }
            }
          },
          {
            "type": "Block",
            "value": "*\n * An action object the is dispatched when an object is destroyed\n *\n * @typedef {object} DestroyAction\n * @property {string} actionType - The type of action being dispatched\n * @property {number|string} id - The id of the destroyed resource\n ",
            "range": [
              856,
              1105
            ],
            "loc": {
              "start": {
                "line": 31,
                "column": 0
              },
              "end": {
                "line": 37,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "range": [
        1107,
        1139
      ],
      "loc": {
        "start": {
          "line": 39,
          "column": 0
        },
        "end": {
          "line": 39,
          "column": 32
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * A generic action object that is dispatched by {APIDispatcher}\n *\n * @typedef {object} Action\n * @property {string} actionType - The type of action being dispatched\n ",
          "range": [
            71,
            245
          ],
          "loc": {
            "start": {
              "line": 7,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 3
            }
          }
        },
        {
          "type": "Block",
          "value": "*\n * An action object that is dispatched when items should be added to a store\n *\n * @typedef {object} MergeAction\n * @property {string} actionType - The type of action being dispatched\n * @property {Array<object>} items - An array of items to be added to the store\n ",
          "range": [
            247,
            518
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 0
            },
            "end": {
              "line": 20,
              "column": 3
            }
          }
        },
        {
          "type": "Block",
          "value": "*\n * An action object that is dispatched when counts should be added to a store\n *\n * @typedef {object} CountAction\n * @property {string} actionType - The type of action being dispatched\n * @property {number} count - The count returned from the API call\n * @property {ResourceQuery} [query] - The query params for the count call\n ",
          "range": [
            520,
            854
          ],
          "loc": {
            "start": {
              "line": 22,
              "column": 0
            },
            "end": {
              "line": 29,
              "column": 3
            }
          }
        },
        {
          "type": "Block",
          "value": "*\n * An action object the is dispatched when an object is destroyed\n *\n * @typedef {object} DestroyAction\n * @property {string} actionType - The type of action being dispatched\n * @property {number|string} id - The id of the destroyed resource\n ",
          "range": [
            856,
            1105
          ],
          "loc": {
            "start": {
              "line": 31,
              "column": 0
            },
            "end": {
              "line": 37,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    1139
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 39,
      "column": 32
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * A generic action object that is dispatched by {APIDispatcher}\n *\n * @typedef {object} Action\n * @property {string} actionType - The type of action being dispatched\n ",
      "range": [
        71,
        245
      ],
      "loc": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 12,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * An action object that is dispatched when items should be added to a store\n *\n * @typedef {object} MergeAction\n * @property {string} actionType - The type of action being dispatched\n * @property {Array<object>} items - An array of items to be added to the store\n ",
      "range": [
        247,
        518
      ],
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 20,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * An action object that is dispatched when counts should be added to a store\n *\n * @typedef {object} CountAction\n * @property {string} actionType - The type of action being dispatched\n * @property {number} count - The count returned from the API call\n * @property {ResourceQuery} [query] - The query params for the count call\n ",
      "range": [
        520,
        854
      ],
      "loc": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 29,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * An action object the is dispatched when an object is destroyed\n *\n * @typedef {object} DestroyAction\n * @property {string} actionType - The type of action being dispatched\n * @property {number|string} id - The id of the destroyed resource\n ",
      "range": [
        856,
        1105
      ],
      "loc": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 37,
          "column": 3
        }
      }
    }
  ]
}