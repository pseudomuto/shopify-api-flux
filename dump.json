[
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/Constants.js",
    "memberof": null,
    "longname": "lib/Constants.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport keyMirror from \"keymirror\";\n\nexport default {\n  OAUTH_HEADER: \"X-Shopify-Access-Token\",\n\n  Actions: keyMirror({\n    SET_SHOP: null,\n    CLEAR_SHOP: null,\n\n    SET_SESSION: null,\n    CLEAR_SESSION: null,\n\n    MERGE_BLOGS: null,\n    CLEAR_BLOGS: null,\n    COUNT_BLOGS: null,\n    DESTROY_BLOGS: null,\n\n    MERGE_COUNTRIES: null,\n    CLEAR_COUNTRIES: null,\n    COUNT_COUNTRIES: null,\n    DESTROY_COUNTRIES: null,\n\n    MERGE_ORDERS: null,\n    CLEAR_ORDERS: null,\n    COUNT_ORDERS: null,\n    DESTROY_ORDERS: null,\n\n    MERGE_PAGES: null,\n    CLEAR_PAGES: null,\n    COUNT_PAGES: null,\n    DESTROY_PAGES: null,\n\n    MERGE_PRODUCTS: null,\n    CLEAR_PRODUCTS: null,\n    COUNT_PRODUCTS: null,\n    DESTROY_PRODUCTS: null,\n\n    // FOR TESTING\n    MERGE_THINGS: null,\n    CLEAR_THINGS: null,\n    COUNT_THINGS: null,\n    DESTROY_THINGS: null\n  })\n};\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/Documentation.js",
    "memberof": null,
    "longname": "lib/Documentation.js",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "content": "/***************************************\n * Externals\n **************************************/\n\n/**\n * @external {Store} https://github.com/facebook/flux/blob/master/src/stores/FluxStore.js\n */\n\n/**\n * @external {FluxMapStore} https://github.com/facebook/flux/blob/master/src/stores/FluxMapStore.js\n */\n\n/**\n * @external {QueryObject} https://lodash.com/docs#where\n */\n"
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Store",
    "externalLink": "https://github.com/facebook/flux/blob/master/src/stores/FluxStore.js",
    "memberof": "lib/Documentation.js",
    "longname": "lib/Documentation.js~Store",
    "access": null,
    "description": null
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "FluxMapStore",
    "externalLink": "https://github.com/facebook/flux/blob/master/src/stores/FluxMapStore.js",
    "memberof": "lib/Documentation.js",
    "longname": "lib/Documentation.js~FluxMapStore",
    "access": null,
    "description": null
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "QueryObject",
    "externalLink": "https://lodash.com/docs#where",
    "memberof": "lib/Documentation.js",
    "longname": "lib/Documentation.js~QueryObject",
    "access": null,
    "description": null
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/ShopifyAPI.js",
    "memberof": null,
    "longname": "lib/ShopifyAPI.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport APIProxy from \"./utilities/APIProxy\";\n\nexport default {\n  Blog:     new APIProxy(require(\"./resources/Blog\"), require(\"./stores/BlogsStore\")),\n  Country:  new APIProxy(require(\"./resources/Country\"), require(\"./stores/CountriesStore\")),\n  Order:    new APIProxy(require(\"./resources/Order\"), require(\"./stores/OrdersStore\")),\n  Page:     new APIProxy(require(\"./resources/Page\"), require(\"./stores/PagesStore\")),\n  Product:  new APIProxy(require(\"./resources/Product\"), require(\"./stores/ProductsStore\")),\n  Session:  new APIProxy(require(\"./resources/Session\"), require(\"./stores/SessionStore\")),\n  Shop:     new APIProxy(require(\"./resources/Shop\"), require(\"./stores/ShopStore\"))\n};\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/__mocks__/fetcher.js",
    "memberof": null,
    "longname": "lib/__mocks__/fetcher.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "// shamelessly borrowed from https://github.com/github/fetch and modified to\n// work as a module and with integration tests for this lib\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = name.toString();\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = value.toString();\n    }\n    return value\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  var support = {\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (!body) {\n        this._bodyText = ''\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(url, options) {\n    options = options || {}\n    this.url = url\n\n    this.credentials = options.credentials || 'omit'\n    this.headers = new Headers(options.headers)\n    this.method = normalizeMethod(options.method || 'GET')\n    this.mode = options.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && options.body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(options.body)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this._initBody(bodyInit)\n    this.type = 'default'\n    this.url = null\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n  }\n\n  Body.call(Response.prototype)\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    // TODO: Request constructor should accept input, init\n    var request\n    if (Request.prototype.isPrototypeOf(input) && !init) {\n      request = input\n    } else {\n      request = new Request(input, init)\n    }\n\n    return new Promise(function(resolve, reject) {\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return;\n      }\n\n      xhr.onload = function() {\n        var status = (xhr.status === 1223) ? 204 : xhr.status\n        if (status < 100 || status > 599) {\n          reject(new TypeError('Network request failed'))\n          return\n        }\n        var options = {\n          status: status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(module.exports);\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/__mocks__/whatwg-fetch.js",
    "memberof": null,
    "longname": "lib/__mocks__/whatwg-fetch.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nmodule.exports = jest.genMockFunction().mockReturnValue(new Promise((resolve) => resolve()));\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/__tests__/ShopifyAPITest.js",
    "memberof": null,
    "longname": "lib/__tests__/ShopifyAPITest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.autoMockOff();\n\nconst RESOURCES = [\n  \"Blog\",\n  \"Country\",\n  \"Order\",\n  \"Page\",\n  \"Product\",\n  \"Session\",\n  \"Shop\"\n];\n\ndescribe(\"ShopifyAPI\", () => {\n  var api;\n\n  beforeEach(() => {\n    api = require(\"../ShopifyAPI\");\n  });\n\n  it(\"defines all resources\", () => {\n    RESOURCES.forEach(resource => {\n      expect(api[resource]).toBeDefined();\n      expect(api[resource]).not.toBeNull();\n      expect(api[resource].store).not.toBeNull();\n    });\n  });\n});\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "RESOURCES",
    "memberof": "lib/__tests__/ShopifyAPITest.js",
    "longname": "lib/__tests__/ShopifyAPITest.js~RESOURCES",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/__tests__/ShopifyAPITest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/dispatcher/APIDispatcher.js",
    "memberof": null,
    "longname": "lib/dispatcher/APIDispatcher.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport Flux from \"flux\";\n\nconst { Dispatcher } = Flux;\n\n/**\n * A generic action object that is dispatched by {APIDispatcher}\n *\n * @typedef {object} Action\n * @property {string} actionType - The type of action being dispatched\n */\n\n/**\n * An action object that is dispatched when items should be added to a store\n *\n * @typedef {object} MergeAction\n * @property {string} actionType - The type of action being dispatched\n * @property {Array<object>} items - An array of items to be added to the store\n */\n\n/**\n * An action object that is dispatched when counts should be added to a store\n *\n * @typedef {object} CountAction\n * @property {string} actionType - The type of action being dispatched\n * @property {number} count - The count returned from the API call\n * @property {ResourceQuery} [query] - The query params for the count call\n */\n\n/**\n * An action object the is dispatched when an object is destroyed\n *\n * @typedef {object} DestroyAction\n * @property {string} actionType - The type of action being dispatched\n * @property {number|string} id - The id of the destroyed resource\n */\n\nexport default new Dispatcher();\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Dispatcher",
    "memberof": "lib/dispatcher/APIDispatcher.js",
    "longname": "lib/dispatcher/APIDispatcher.js~Dispatcher",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/dispatcher/APIDispatcher.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "Action",
    "memberof": "lib/dispatcher/APIDispatcher.js",
    "longname": "lib/dispatcher/APIDispatcher.js~Action",
    "access": null,
    "description": "A generic action object that is dispatched by {APIDispatcher}",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "actionType",
        "description": "The type of action being dispatched"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "Action"
    }
  },
  {
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "MergeAction",
    "memberof": "lib/dispatcher/APIDispatcher.js",
    "longname": "lib/dispatcher/APIDispatcher.js~MergeAction",
    "access": null,
    "description": "An action object that is dispatched when items should be added to a store",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "actionType",
        "description": "The type of action being dispatched"
      },
      {
        "nullable": null,
        "types": [
          "Array<object>"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": "An array of items to be added to the store"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "MergeAction"
    }
  },
  {
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "CountAction",
    "memberof": "lib/dispatcher/APIDispatcher.js",
    "longname": "lib/dispatcher/APIDispatcher.js~CountAction",
    "access": null,
    "description": "An action object that is dispatched when counts should be added to a store",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "actionType",
        "description": "The type of action being dispatched"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "count",
        "description": "The count returned from the API call"
      },
      {
        "nullable": null,
        "types": [
          "ResourceQuery"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "The query params for the count call"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "CountAction"
    }
  },
  {
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "DestroyAction",
    "memberof": "lib/dispatcher/APIDispatcher.js",
    "longname": "lib/dispatcher/APIDispatcher.js~DestroyAction",
    "access": null,
    "description": "An action object the is dispatched when an object is destroyed",
    "lineNumber": 39,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "actionType",
        "description": "The type of action being dispatched"
      },
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the destroyed resource"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "DestroyAction"
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/dispatcher/__tests__/APIDispatcherTest.js",
    "memberof": null,
    "longname": "lib/dispatcher/__tests__/APIDispatcherTest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.dontMock(\"flux\");\njest.dontMock(\"../APIDispatcher\");\n\ndescribe(\"APIDispatcher\", () => {\n  var APIDispatcher;\n\n  beforeEach(() => {\n    APIDispatcher = require(\"../APIDispatcher\");\n  });\n\n  it(\"sends actions to subscribers\", () => {\n    let listener = jest.genMockFunction();\n    let payload = {};\n\n    APIDispatcher.register(listener);\n    APIDispatcher.dispatch(payload);\n\n    expect(listener.mock.calls.length).toBe(1);\n    expect(listener.mock.calls[0][0]).toBe(payload);\n  });\n\n  it(\"does things\", () => {\n    expect(true).toBe(true);\n  });\n});\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/integration/__tests__/BlogsAPITest.js",
    "memberof": null,
    "longname": "lib/integration/__tests__/BlogsAPITest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.autoMockOff();\n\nconst ShopifyAPI        = require(\"../../ShopifyAPI\");\nconst { Blog, Session } = ShopifyAPI;\n\nconst BlogId = 26362181;\n\ndescribe(\"blogs API\", () => {\n  setupIntegrationTest(Session);\n\n  describe(\"getting blogs\", () => {\n    pit(\"GET /admin/blogs.json\", () => {\n      return Blog.fetch().then(blogs => {\n        expect(blogs.length).toBeGreaterThan(0);\n      });\n    });\n\n    pit(\"GET /admin/blogs.json?ids=\", () => {\n      return Blog.fetch({ ids: [BlogId] }).then(blogs => {\n        expect(blogs.length).toBe(1);\n        expect(blogs[0].id).toBe(BlogId);\n      });\n    });\n\n    pit(\"GET /admin/blogs/:id.json\", () => {\n      return Blog.fetch(BlogId).then(blogs => {\n        expect(blogs).toBeDefined();\n        expect(blogs.length).toBe(1);\n        expect(blogs[0].id).toBe(BlogId);\n      });\n    });\n  });\n\n  describe(\"counting blogs\", () => {\n    pit (\"GET /admin/blogs/count.json\", () => {\n      return Blog.fetchCount().then(count => {\n        expect(count).toBeGreaterThan(0);\n      });\n    });\n\n    pit (\"GET /admin/blogs/count.json?id=\", () => {\n      return Blog.fetchCount({ id: BlogId }).then(count => {\n        expect(count).toBe(1);\n      });\n    });\n  });\n});\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ShopifyAPI",
    "memberof": "lib/integration/__tests__/BlogsAPITest.js",
    "longname": "lib/integration/__tests__/BlogsAPITest.js~ShopifyAPI",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/integration/__tests__/BlogsAPITest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Blog",
    "memberof": "lib/integration/__tests__/BlogsAPITest.js",
    "longname": "lib/integration/__tests__/BlogsAPITest.js~Blog",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/integration/__tests__/BlogsAPITest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "BlogId",
    "memberof": "lib/integration/__tests__/BlogsAPITest.js",
    "longname": "lib/integration/__tests__/BlogsAPITest.js~BlogId",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/integration/__tests__/BlogsAPITest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/integration/__tests__/CountriesAPITest.js",
    "memberof": null,
    "longname": "lib/integration/__tests__/CountriesAPITest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.autoMockOff();\n\nconst ShopifyAPI           = require(\"../../ShopifyAPI\");\nconst { Country, Session } = ShopifyAPI;\n\nconst CountryId = 100312773;\n\ndescribe(\"Countries API\", () => {\n  setupIntegrationTest(Session);\n\n  describe(\"getting countries\", () => {\n    pit(\"GET /admin/countries.json\", () => {\n      return Country.fetch().then(countries => {\n        expect(countries.length).toBeGreaterThan(0);\n      });\n    });\n\n    pit(\"GET /admin/countries.json?ids=\", () => {\n      return Country.fetch({ ids: [CountryId] }).then(countries => {\n        expect(countries.length).toBe(2); // rest of world is always included\n        expect(countries[0].id).toBe(CountryId);\n      });\n    });\n\n    pit(\"GET /admin/countries/:id.json\", () => {\n      return Country.fetch(CountryId).then(countries => {\n        expect(countries).toBeDefined();\n        expect(countries.length).toBe(1);\n        expect(countries[0].id).toBe(CountryId);\n      });\n    });\n  });\n\n  describe(\"counting countries\", () => {\n    pit (\"GET /admin/countries/count.json\", () => {\n      return Country.fetchCount().then(count => {\n        expect(count).toBeGreaterThan(0);\n      });\n    });\n\n    pit (\"GET /admin/countries/count.json?id=\", () => {\n      return Country.fetchCount({ id: CountryId }).then(count => {\n        expect(count).toBe(2); // rest of world is always included\n      });\n    });\n  });\n});\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ShopifyAPI",
    "memberof": "lib/integration/__tests__/CountriesAPITest.js",
    "longname": "lib/integration/__tests__/CountriesAPITest.js~ShopifyAPI",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/integration/__tests__/CountriesAPITest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Country",
    "memberof": "lib/integration/__tests__/CountriesAPITest.js",
    "longname": "lib/integration/__tests__/CountriesAPITest.js~Country",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/integration/__tests__/CountriesAPITest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "CountryId",
    "memberof": "lib/integration/__tests__/CountriesAPITest.js",
    "longname": "lib/integration/__tests__/CountriesAPITest.js~CountryId",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/integration/__tests__/CountriesAPITest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/integration/__tests__/OrdersAPITest.js",
    "memberof": null,
    "longname": "lib/integration/__tests__/OrdersAPITest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.autoMockOff();\n\nimport _ from \"lodash\";\n\nconst ShopifyAPI         = require(\"../../ShopifyAPI\");\nconst { Order, Session } = ShopifyAPI;\n\nconst OrderId = 1322251717;\n\ndescribe(\"Orders API\", () => {\n  setupIntegrationTest(Session);\n\n  describe(\"getting orders\", () => {\n    pit(\"GET /admin/orders.json\", () => {\n      return Order.fetch().then(orders => {\n        expect(orders.length).toBeGreaterThan(0);\n      });\n    });\n\n    pit(\"GET /admin/orders.json?fields=id,name\", () => {\n      return Order.fetch({ fields: [\"id\", \"name\"] }).then(orders => {\n        expect(orders.length).toBeGreaterThan(0);\n      });\n    });\n\n    pit(\"GET /admin/orders.json?financial_status=paid\", () => {\n      return Order.fetch({ financial_status: \"paid\" }).then(orders => {\n        expect(_.pluck(orders, \"id\").indexOf(OrderId)).toBeGreaterThan(-1);\n      });\n    });\n\n    pit(\"GET /admin/orders/:id.json\", () => {\n      return Order.fetch(OrderId).then(orders => {\n        expect(orders.length).toBe(1);\n        expect(orders[0].id).toBe(OrderId);\n      });\n    });\n  });\n\n  describe(\"counting orders\", () => {\n    pit (\"GET /admin/orders/count.json\", () => {\n      return Order.fetchCount().then(count => {\n        expect(count).toBeGreaterThan(0);\n      });\n    });\n\n    pit (\"GET /admin/orders/count.json?id=\", () => {\n      return Order.fetchCount({ financial_status: \"paid\" }).then(count => {\n        expect(count).toBeGreaterThan(0);\n      });\n    });\n  });\n});\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ShopifyAPI",
    "memberof": "lib/integration/__tests__/OrdersAPITest.js",
    "longname": "lib/integration/__tests__/OrdersAPITest.js~ShopifyAPI",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/integration/__tests__/OrdersAPITest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Order",
    "memberof": "lib/integration/__tests__/OrdersAPITest.js",
    "longname": "lib/integration/__tests__/OrdersAPITest.js~Order",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/integration/__tests__/OrdersAPITest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "OrderId",
    "memberof": "lib/integration/__tests__/OrdersAPITest.js",
    "longname": "lib/integration/__tests__/OrdersAPITest.js~OrderId",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/integration/__tests__/OrdersAPITest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/integration/__tests__/PagesAPITest.js",
    "memberof": null,
    "longname": "lib/integration/__tests__/PagesAPITest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.autoMockOff();\n\nconst ShopifyAPI           = require(\"../../ShopifyAPI\");\nconst { Page, Session } = ShopifyAPI;\n\nconst PageId = 67616453;\n\ndescribe(\"Pages API\", () => {\n  setupIntegrationTest(Session);\n\n  describe(\"getting pages\", () => {\n    pit(\"GET /admin/pages.json\", () => {\n      return Page.fetch().then(pages => {\n        expect(pages.length).toBeGreaterThan(0);\n      });\n    });\n\n    pit(\"GET /admin/pages.json?title=\", () => {\n      return Page.fetch({ title: \"Frontpage\" }).then(pages => {\n        expect(pages.length).toBe(1);\n        expect(pages[0].id).toBe(PageId);\n      });\n    });\n\n    pit(\"GET /admin/pages/:id.json\", () => {\n      return Page.fetch(PageId).then(pages => {\n        expect(pages).toBeDefined();\n        expect(pages.length).toBe(1);\n        expect(pages[0].id).toBe(PageId);\n      });\n    });\n  });\n\n  describe(\"counting pages\", () => {\n    pit (\"GET /admin/pages/count.json\", () => {\n      return Page.fetchCount().then(count => {\n        expect(count).toBeGreaterThan(0);\n      });\n    });\n\n    pit (\"GET /admin/pages/count.json?title=\", () => {\n      return Page.fetchCount({ title: \"Frontpage\" }).then(count => {\n        expect(count).toBe(1);\n      });\n    });\n  });\n});\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ShopifyAPI",
    "memberof": "lib/integration/__tests__/PagesAPITest.js",
    "longname": "lib/integration/__tests__/PagesAPITest.js~ShopifyAPI",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/integration/__tests__/PagesAPITest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Page",
    "memberof": "lib/integration/__tests__/PagesAPITest.js",
    "longname": "lib/integration/__tests__/PagesAPITest.js~Page",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/integration/__tests__/PagesAPITest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "PageId",
    "memberof": "lib/integration/__tests__/PagesAPITest.js",
    "longname": "lib/integration/__tests__/PagesAPITest.js~PageId",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/integration/__tests__/PagesAPITest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/integration/__tests__/ProductsAPITest.js",
    "memberof": null,
    "longname": "lib/integration/__tests__/ProductsAPITest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.autoMockOff();\n\nconst ShopifyAPI           = require(\"../../ShopifyAPI\");\nconst { Product, Session } = ShopifyAPI;\n\nconst ProductId = 2158011973;\n\ndescribe(\"Products API\", () => {\n  setupIntegrationTest(Session);\n\n  describe(\"getting products\", () => {\n    pit(\"GET /admin/products.json\", () => {\n      return Product.fetch().then(products => {\n        expect(products.length).toBeGreaterThan(0);\n      });\n    });\n\n    pit(\"GET /admin/products.json?ids=\", () => {\n      return Product.fetch({ ids: [ProductId] }).then(products => {\n        expect(products.length).toBe(1);\n        expect(products[0].id).toBe(ProductId);\n      });\n    });\n\n    pit(\"GET /admin/products/:id.json\", () => {\n      return Product.fetch(ProductId).then(products => {\n        expect(products).toBeDefined();\n        expect(products.length).toBe(1);\n        expect(products[0].id).toBe(ProductId);\n      });\n    });\n  });\n\n  describe(\"counting products\", () => {\n    pit (\"GET /admin/products/count.json\", () => {\n      return Product.fetchCount().then(count => {\n        expect(count).toBeGreaterThan(0);\n      });\n    });\n\n    pit (\"GET /admin/products/count.json?id=\", () => {\n      return Product.fetchCount({ id: ProductId }).then(count => {\n        expect(count).toBe(1);\n      });\n    });\n  });\n});\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ShopifyAPI",
    "memberof": "lib/integration/__tests__/ProductsAPITest.js",
    "longname": "lib/integration/__tests__/ProductsAPITest.js~ShopifyAPI",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/integration/__tests__/ProductsAPITest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Product",
    "memberof": "lib/integration/__tests__/ProductsAPITest.js",
    "longname": "lib/integration/__tests__/ProductsAPITest.js~Product",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/integration/__tests__/ProductsAPITest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ProductId",
    "memberof": "lib/integration/__tests__/ProductsAPITest.js",
    "longname": "lib/integration/__tests__/ProductsAPITest.js~ProductId",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/integration/__tests__/ProductsAPITest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/resources/Base.js",
    "memberof": null,
    "longname": "lib/resources/Base.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport Actions       from \"../utilities/Actions\";\nimport Api           from \"../utilities/WebAPI\";\nimport APIDispatcher from \"../dispatcher/APIDispatcher\";\nimport URLHelpers    from \"../utilities/URLHelpers\";\n\nlet DEFAULT_API_METHODS = {\n  countable:    [\"fetchCount\"],\n  createable:   [\"create\", \"update\"],\n  destroyable:  [\"destroy\"]\n};\n\nfunction isPrimitive(value) {\n  return [\"number\", \"string\"].indexOf(typeof value) >= 0;\n}\n\n/**\n * A base class for API resources. This class is meant to be subclassed and have it's `apiMethods` method overridden to\n * include all methods that should be made available to consumers.\n *\n * @example\n * import Base from \"./Base\";\n *\n * class Thing extends Base {\n *   constructor() {\n *     super(\"thing\")\n *   }\n *\n *   static get apiMethods() {\n *     return super.apiMethods.concat([\"fetchAllTheThings\"]);\n *   }\n *\n *   fetchAllTheThings() {\n *     return this.fetch(\"/admin/things.json\");\n *   }\n * }\n */\nexport default class {\n  /**\n   * Using the supplied `resourceName`, this constructor will generate the singular and plural names for this resource\n   * which will be used to infer the merge, count, and clear actions to be dispatched.\n   *\n   * @param {string} resourceName - The singular name for the resource (e.g. `product`)\n   * @param {object} [options] - Options for this resource\n   * @param {boolean} options.countable - Whether or not this resource is countable (has a /count.json endpoint)\n   * @param {boolean} options.createable - Whether or not this resource can be created\n   * @param {boolean} options.destroyable - Whether or not this resource can be deleted\n   */\n  constructor(resourceName, options = {}) {\n    this._resource  = resourceName;\n    this._resources = `${resourceName}s`;\n    this._options   = options;\n  }\n\n  /**\n   * An array of methods to be exposed via {@link APIProxy}\n   *\n   * @return {Array<string>} The names of all methods to be made available\n   */\n  get apiMethods() {\n    let exportedMethods = [\"clear\", \"fetch\"];\n\n    for (let type of Object.keys(DEFAULT_API_METHODS)) {\n      if (this._options[type]) {\n        exportedMethods.push(...DEFAULT_API_METHODS[type]);\n      }\n    }\n\n    return exportedMethods;\n  }\n\n  /**\n   * Returns an object that supplies the clear, count and merge actions for this resource\n   *\n   * @return {Actions}\n   */\n  get actions() {\n    return new Actions(this._resources);\n  }\n\n  /**\n   * Performs a GET request for the specified query.\n   *\n   * @param {ResourceQuery} [query]\n   *\n   * @return {RequestPromise}\n   */\n  fetch(query) {\n    let url      = this.urlFor(query);\n    let dispatch = this._dispatchMerge.bind(this);\n    let resource = isPrimitive(query) ? this._resource : this._resources;\n\n    return Api.get(url).then(response => dispatch(response[resource]));\n  }\n\n  /**\n   * Performs a GET request for the resource's count endpoint\n   *\n   * @param {ResourceQuery} [query]\n   *\n   * @return {RequestPromise}\n   */\n  fetchCount(query) {\n    let url      = this.urlFor(\"count\", query);\n    let dispatch = this._dispatchCount.bind(this);\n\n    return Api.get(url).then(response => dispatch(response.count, query));\n  }\n\n  /**\n   * Performs a POST request, sending the resource along as the request body\n   *\n   * @param {object} resource - The resource to be created\n   * @param {object} [options] - Options to be passed along to the request\n   *\n   * @return {RequestPromise}\n   */\n  create(resource, options) {\n    let body     = { [this._resource]: resource };\n    let url      = this.urlFor();\n    let dispatch = this._dispatchMerge.bind(this);\n    let property = this._resource;\n\n    return Api.post(url, body, options).then(response => dispatch(response[property]));\n  }\n\n  /**\n   * Updates the given resource\n   *\n   * @param {number|string} - The id of the resource\n   * @param {object} resource - The resource to be updated\n   * @param {object} [options] - Options to be passed along with the request\n   *\n   * @return {RequestPromise}\n   */\n  update(id, resource, options) {\n    let body     = { [this._resource]: resource };\n    let url      = this.urlFor(id);\n    let dispatch = this._dispatchMerge.bind(this);\n    let property = this._resource;\n\n    return Api.put(url, body, options).then(response => dispatch(response[property]));\n  }\n\n  /**\n   * Destroys the resource\n   *\n   * @param {number|string} id- The id of the resource\n   * @param {object} [options] - Options to be passed along with the request\n   *\n   * @return {RequestPromise}\n   */\n  destroy(id, options) {\n    let url      = this.urlFor(id);\n    let dispatch = this._dispatchDestroy.bind(this);\n\n    return Api.delete(url, options).then(() => dispatch(id));\n  }\n\n  /**\n   * Dispatches the clear action for this resource. The action will be handled by the appropriate store.\n   */\n  clear() {\n    APIDispatcher.dispatch({ actionType: this.actions.clearAction });\n  }\n\n  /**\n   * @protected\n   * Generates a resource URL for the specified query. The query can be an id, or an object to be converted to a query\n   * string.\n   *\n   * @param {ResourceQuery} [query]\n   * @param {ResourceQuery} [params] - Query string parameters (only used when query is a number or string)\n   *\n   * @return {string} The resource URL for the specified query\n   *\n   * @example\n   * import Base from \"./Base\";\n   *\n   * let instance = new Base(\"product\");\n   *\n   * instance.urlFor();                            // `/admin/products.json`\n   * instance.urlFor(1);                           // `/admin/products/1.json`\n   * instance.urlFor(\"1\");                         // `/admin/products/1.json`\n   * instance.urlFor(1, { type: \"test\" })          // `/admin/products/1.json?type=test\n   * instance.urlFor({ fields: [\"id\", \"title\"] }); // `/admin/products.json?fields=id,title\n   */\n  urlFor(query, params) {\n    var url         = `/admin/${this._resources}.json`;\n    var queryString = URLHelpers.toQueryString(query);\n\n    if (isPrimitive(query)) {\n      url         = `/admin/${this._resources}/${query}.json`;\n      queryString = URLHelpers.toQueryString(params);\n    }\n\n    return queryString ? `${url}?${queryString}` : url;\n  }\n\n  _dispatchMerge(items) {\n    if (!Array.isArray(items)) {\n      items = [items];\n    }\n\n    let actionType = this.actions.mergeAction;\n    APIDispatcher.dispatch({ actionType, items });\n\n    return items;\n  }\n\n  _dispatchCount(count, query) {\n    let actionType = this.actions.countAction;\n    APIDispatcher.dispatch({ actionType, count, query });\n\n    return count;\n  }\n\n  _dispatchDestroy(id) {\n    let actionType = this.actions.destroyAction;\n    APIDispatcher.dispatch({ actionType, id });\n  }\n}\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_API_METHODS",
    "memberof": "lib/resources/Base.js",
    "longname": "lib/resources/Base.js~DEFAULT_API_METHODS",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/resources/Base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "isPrimitive",
    "memberof": "lib/resources/Base.js",
    "longname": "lib/resources/Base.js~isPrimitive",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/resources/Base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Base",
    "memberof": "lib/resources/Base.js",
    "longname": "lib/resources/Base.js~Base",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/resources/Base.js",
    "importStyle": "Base",
    "description": "A base class for API resources. This class is meant to be subclassed and have it's `apiMethods` method overridden to\ninclude all methods that should be made available to consumers.",
    "examples": [
      "import Base from \"./Base\";\n\nclass Thing extends Base {\n  constructor() {\n    super(\"thing\")\n  }\n\n  static get apiMethods() {\n    return super.apiMethods.concat([\"fetchAllTheThings\"]);\n  }\n\n  fetchAllTheThings() {\n    return this.fetch(\"/admin/things.json\");\n  }\n}"
    ],
    "lineNumber": 39,
    "interface": false
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/resources/Base.js~Base",
    "longname": "lib/resources/Base.js~Base#constructor",
    "access": null,
    "description": "Using the supplied `resourceName`, this constructor will generate the singular and plural names for this resource\nwhich will be used to infer the merge, count, and clear actions to be dispatched.",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "resourceName",
        "description": "The singular name for the resource (e.g. `product`)"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Options for this resource"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.countable",
        "description": "Whether or not this resource is countable (has a /count.json endpoint)"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.createable",
        "description": "Whether or not this resource can be created"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.destroyable",
        "description": "Whether or not this resource can be deleted"
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_resource",
    "memberof": "lib/resources/Base.js~Base",
    "longname": "lib/resources/Base.js~Base#_resource",
    "access": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_resources",
    "memberof": "lib/resources/Base.js~Base",
    "longname": "lib/resources/Base.js~Base#_resources",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_options",
    "memberof": "lib/resources/Base.js~Base",
    "longname": "lib/resources/Base.js~Base#_options",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "apiMethods",
    "memberof": "lib/resources/Base.js~Base",
    "longname": "lib/resources/Base.js~Base#apiMethods",
    "access": null,
    "description": "An array of methods to be exposed via {@link APIProxy}",
    "lineNumber": 61,
    "return": {
      "nullable": null,
      "types": [
        "Array<string>"
      ],
      "spread": false,
      "description": "The names of all methods to be made available"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "actions",
    "memberof": "lib/resources/Base.js~Base",
    "longname": "lib/resources/Base.js~Base#actions",
    "access": null,
    "description": "Returns an object that supplies the clear, count and merge actions for this resource",
    "lineNumber": 78,
    "return": {
      "nullable": null,
      "types": [
        "Actions"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetch",
    "memberof": "lib/resources/Base.js~Base",
    "longname": "lib/resources/Base.js~Base#fetch",
    "access": null,
    "description": "Performs a GET request for the specified query.",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "ResourceQuery"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RequestPromise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetchCount",
    "memberof": "lib/resources/Base.js~Base",
    "longname": "lib/resources/Base.js~Base#fetchCount",
    "access": null,
    "description": "Performs a GET request for the resource's count endpoint",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "ResourceQuery"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RequestPromise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "lib/resources/Base.js~Base",
    "longname": "lib/resources/Base.js~Base#create",
    "access": null,
    "description": "Performs a POST request, sending the resource along as the request body",
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "resource",
        "description": "The resource to be created"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Options to be passed along to the request"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RequestPromise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "lib/resources/Base.js~Base",
    "longname": "lib/resources/Base.js~Base#update",
    "access": null,
    "description": "Updates the given resource",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "The id of the resource"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "resource",
        "description": "The resource to be updated"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Options to be passed along with the request"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RequestPromise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "destroy",
    "memberof": "lib/resources/Base.js~Base",
    "longname": "lib/resources/Base.js~Base#destroy",
    "access": null,
    "description": "Destroys the resource",
    "lineNumber": 154,
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id-",
        "description": "The id of the resource"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Options to be passed along with the request"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RequestPromise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clear",
    "memberof": "lib/resources/Base.js~Base",
    "longname": "lib/resources/Base.js~Base#clear",
    "access": null,
    "description": "Dispatches the clear action for this resource. The action will be handled by the appropriate store.",
    "lineNumber": 164,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "urlFor",
    "memberof": "lib/resources/Base.js~Base",
    "longname": "lib/resources/Base.js~Base#urlFor",
    "access": "protected",
    "description": null,
    "examples": [
      "import Base from \"./Base\";\n\nlet instance = new Base(\"product\");\n\ninstance.urlFor();                            // `/admin/products.json`\ninstance.urlFor(1);                           // `/admin/products/1.json`\ninstance.urlFor(\"1\");                         // `/admin/products/1.json`\ninstance.urlFor(1, { type: \"test\" })          // `/admin/products/1.json?type=test\ninstance.urlFor({ fields: [\"id\", \"title\"] }); // `/admin/products.json?fields=id,title"
    ],
    "lineNumber": 189,
    "params": [
      {
        "nullable": null,
        "types": [
          "ResourceQuery"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ResourceQuery"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "Query string parameters (only used when query is a number or string)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The resource URL for the specified query"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_dispatchMerge",
    "memberof": "lib/resources/Base.js~Base",
    "longname": "lib/resources/Base.js~Base#_dispatchMerge",
    "access": null,
    "description": null,
    "lineNumber": 201,
    "undocument": true,
    "params": [
      {
        "name": "items",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_dispatchCount",
    "memberof": "lib/resources/Base.js~Base",
    "longname": "lib/resources/Base.js~Base#_dispatchCount",
    "access": null,
    "description": null,
    "lineNumber": 212,
    "undocument": true,
    "params": [
      {
        "name": "count",
        "types": [
          "*"
        ]
      },
      {
        "name": "query",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_dispatchDestroy",
    "memberof": "lib/resources/Base.js~Base",
    "longname": "lib/resources/Base.js~Base#_dispatchDestroy",
    "access": null,
    "description": null,
    "lineNumber": 219,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/resources/Blog.js",
    "memberof": null,
    "longname": "lib/resources/Blog.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport Base from \"./Base\";\n\n/**\n * The Blog resource\n *\n * @extends {Base}\n */\nclass Blog extends Base {\n  constructor() {\n    super(\"blog\", {\n      countable: true,\n      createable: true,\n      destroyable: true\n    });\n  }\n}\n\n/** @ignore */\nexport default new Blog();\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Blog",
    "memberof": "lib/resources/Blog.js",
    "longname": "lib/resources/Blog.js~Blog",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/resources/Blog.js",
    "importStyle": null,
    "description": "The Blog resource",
    "lineNumber": 10,
    "pseudoExport": true,
    "interface": false,
    "extends": [
      "Base"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/resources/Blog.js~Blog",
    "longname": "lib/resources/Blog.js~Blog#constructor",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "blog",
    "memberof": "lib/resources/Blog.js",
    "longname": "lib/resources/Blog.js~blog",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/resources/Blog.js",
    "importStyle": "blog",
    "description": null,
    "lineNumber": 21,
    "ignore": true,
    "type": {
      "types": [
        "lib/resources/Blog.js~Blog"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/resources/Country.js",
    "memberof": null,
    "longname": "lib/resources/Country.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport Base from \"./Base\";\n\n/**\n * The Country resource\n *\n * @extends {Base}\n */\nclass Country extends Base {\n  constructor() {\n    super(\"country\", {\n      countable: true,\n      createable: true,\n      destroyable: true\n    });\n\n    this._resources = \"countries\";\n  }\n}\n\n/** @ignore */\nexport default new Country();\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Country",
    "memberof": "lib/resources/Country.js",
    "longname": "lib/resources/Country.js~Country",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/resources/Country.js",
    "importStyle": null,
    "description": "The Country resource",
    "lineNumber": 10,
    "pseudoExport": true,
    "interface": false,
    "extends": [
      "Base"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/resources/Country.js~Country",
    "longname": "lib/resources/Country.js~Country#constructor",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_resources",
    "memberof": "lib/resources/Country.js~Country",
    "longname": "lib/resources/Country.js~Country#_resources",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "country",
    "memberof": "lib/resources/Country.js",
    "longname": "lib/resources/Country.js~country",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/resources/Country.js",
    "importStyle": "country",
    "description": null,
    "lineNumber": 23,
    "ignore": true,
    "type": {
      "types": [
        "lib/resources/Country.js~Country"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/resources/Order.js",
    "memberof": null,
    "longname": "lib/resources/Order.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport Api  from \"../utilities/WebAPI\";\nimport Base from \"./Base\";\n\n/**\n * The Order resource\n *\n * @extends {Base}\n */\nclass Order extends Base {\n  constructor() {\n    super(\"order\", {\n      countable:    true,\n      createable:   true,\n      destroyable:  true\n    });\n  }\n\n  /**\n   * Close an open order\n   *\n   * @param {number|string} id - The id of the order\n   *\n   * @return {RequestPromise}\n   */\n  close(id) {\n    return this._postToAction(id, \"close\");\n  }\n\n  /**\n   * Open a closed order\n   *\n   * @param {number|string} id - The id of the order\n   *\n   * @return {RequestPromise}\n   */\n  open(id) {\n    return this._postToAction(id, \"open\");\n  }\n\n  /**\n   * Cancel an order\n   *\n   * @param {number|string} id - The id of the order\n   * @param {object}  [options] - Options for the cancel operation\n   * @param {number}  [options.amount] - The (decimal) amount to refund\n   * @param {boolean} [options.restock=false] - Whether or not to restock inventory\n   * @param {string}  [options.reason=other] - One of customer, inventory, fraud or other\n   * @param {boolean} [options.email=false] - Whether or not to send the customer an email regarding the cancellation\n   *\n   * @return {RequestPromise}\n   */\n  cancel(id, options = {}) {\n    return this._postToAction(id, \"cancel\", options);\n  }\n\n  _postToAction(id, action, resource) {\n    let url      = this._memberURLForAction(action, id);\n    let dispatch = this._dispatchMerge.bind(this);\n    let property = this._resource;\n\n    return Api.post(url, resource).then(response => dispatch(response[property]));\n  }\n\n  _memberURLForAction(action, ...urlParams) {\n    return this.urlFor(...urlParams).replace(/\\.json$/, `/${action}.json`);\n  }\n}\n\n/** @ignore */\nexport default new Order();\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Order",
    "memberof": "lib/resources/Order.js",
    "longname": "lib/resources/Order.js~Order",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/resources/Order.js",
    "importStyle": null,
    "description": "The Order resource",
    "lineNumber": 11,
    "pseudoExport": true,
    "interface": false,
    "extends": [
      "Base"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/resources/Order.js~Order",
    "longname": "lib/resources/Order.js~Order#constructor",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "close",
    "memberof": "lib/resources/Order.js~Order",
    "longname": "lib/resources/Order.js~Order#close",
    "access": null,
    "description": "Close an open order",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the order"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RequestPromise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "open",
    "memberof": "lib/resources/Order.js~Order",
    "longname": "lib/resources/Order.js~Order#open",
    "access": null,
    "description": "Open a closed order",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the order"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RequestPromise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "cancel",
    "memberof": "lib/resources/Order.js~Order",
    "longname": "lib/resources/Order.js~Order#cancel",
    "access": null,
    "description": "Cancel an order",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the order"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Options for the cancel operation"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.amount",
        "description": "The (decimal) amount to refund"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.restock",
        "description": "Whether or not to restock inventory"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "other",
        "defaultRaw": "other",
        "name": "options.reason",
        "description": "One of customer, inventory, fraud or other"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.email",
        "description": "Whether or not to send the customer an email regarding the cancellation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RequestPromise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_postToAction",
    "memberof": "lib/resources/Order.js~Order",
    "longname": "lib/resources/Order.js~Order#_postToAction",
    "access": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      },
      {
        "name": "resource",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_memberURLForAction",
    "memberof": "lib/resources/Order.js~Order",
    "longname": "lib/resources/Order.js~Order#_memberURLForAction",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      },
      {
        "name": "urlParams",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "order",
    "memberof": "lib/resources/Order.js",
    "longname": "lib/resources/Order.js~order",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/resources/Order.js",
    "importStyle": "order",
    "description": null,
    "lineNumber": 72,
    "ignore": true,
    "type": {
      "types": [
        "lib/resources/Order.js~Order"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/resources/Page.js",
    "memberof": null,
    "longname": "lib/resources/Page.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport Base from \"./Base\";\n\n/**\n * The Page resource\n *\n * @extends {Base}\n */\nclass Page extends Base {\n  constructor() {\n    super(\"page\", {\n      countable: true,\n      createable: true,\n      destroyable: true\n    });\n  }\n}\n\n/** @ignore */\nexport default new Page();\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Page",
    "memberof": "lib/resources/Page.js",
    "longname": "lib/resources/Page.js~Page",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/resources/Page.js",
    "importStyle": null,
    "description": "The Page resource",
    "lineNumber": 10,
    "pseudoExport": true,
    "interface": false,
    "extends": [
      "Base"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/resources/Page.js~Page",
    "longname": "lib/resources/Page.js~Page#constructor",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "page",
    "memberof": "lib/resources/Page.js",
    "longname": "lib/resources/Page.js~page",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/resources/Page.js",
    "importStyle": "page",
    "description": null,
    "lineNumber": 21,
    "ignore": true,
    "type": {
      "types": [
        "lib/resources/Page.js~Page"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/resources/Product.js",
    "memberof": null,
    "longname": "lib/resources/Product.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport Base from \"./Base\";\n\n/**\n * The Product resource\n *\n * @extends {Base}\n */\nclass Product extends Base {\n  constructor() {\n    super(\"product\", {\n      countable: true,\n      createable: true,\n      destroyable: true\n    });\n  }\n}\n\n/** @ignore */\nexport default new Product();\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Product",
    "memberof": "lib/resources/Product.js",
    "longname": "lib/resources/Product.js~Product",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/resources/Product.js",
    "importStyle": null,
    "description": "The Product resource",
    "lineNumber": 10,
    "pseudoExport": true,
    "interface": false,
    "extends": [
      "Base"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/resources/Product.js~Product",
    "longname": "lib/resources/Product.js~Product#constructor",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "product",
    "memberof": "lib/resources/Product.js",
    "longname": "lib/resources/Product.js~product",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/resources/Product.js",
    "importStyle": "product",
    "description": null,
    "lineNumber": 21,
    "ignore": true,
    "type": {
      "types": [
        "lib/resources/Product.js~Product"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/resources/Session.js",
    "memberof": null,
    "longname": "lib/resources/Session.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport APIDispatcher from \"../dispatcher/APIDispatcher\";\nimport Base          from \"./Base\";\nimport Constants     from \"../Constants\";\n\nclass InvalidDomainException extends Error {}\nclass InvalidTokenException extends Error {}\n\nfunction verifyDomain(domain) {\n  if(!domain) {\n    throw new InvalidDomainException(\"Domain name cannot be blank or null\");\n  }\n}\n\nfunction verifyToken(token) {\n  if (!token) {\n    throw new InvalidTokenException(\"Token cannot be blank, null, undefined or empty\");\n  }\n}\n\nfunction sanitizeDomain(domain) {\n  if (!domain.match(/myshopify\\.com$/)) {\n    return `${domain}.myshopify.com`;\n  }\n\n  return domain;\n}\n\n/**\n * The Session resource\n *\n * @extends {Base}\n */\nclass Session extends Base {\n  constructor() {\n    super(\"session\");\n\n    this._resources   = this._resource;\n  }\n\n  /**\n   * @override\n   * An array of methods to be exposed via {@link APIProxy}\n   *\n   * @return {Array<string>} The names of all methods to be made available\n   */\n  get apiMethods() {\n    return [\"init\", \"clear\"];\n  }\n\n  get actions() {\n    return {\n      clearAction: Constants.Actions.CLEAR_SESSION\n    };\n  }\n\n  /**\n   * Dispatches the SET_SESSION event to the store\n   *\n   * @param {string} domain - The shop's domain (with or without the `.myshopify.com` suffix)\n   * @param {string} token - The API token to be used\n   */\n  init(domain, token) {\n    verifyDomain(domain);\n    verifyToken(token);\n\n    APIDispatcher.dispatch({\n      actionType: Constants.Actions.SET_SESSION,\n      domain: sanitizeDomain(domain),\n      accessToken: token\n    });\n  }\n}\n\n/** @ignore */\nexport default new Session();\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "InvalidDomainException",
    "memberof": "lib/resources/Session.js",
    "longname": "lib/resources/Session.js~InvalidDomainException",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/resources/Session.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "InvalidTokenException",
    "memberof": "lib/resources/Session.js",
    "longname": "lib/resources/Session.js~InvalidTokenException",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/resources/Session.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "verifyDomain",
    "memberof": "lib/resources/Session.js",
    "longname": "lib/resources/Session.js~verifyDomain",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/resources/Session.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "domain",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "verifyToken",
    "memberof": "lib/resources/Session.js",
    "longname": "lib/resources/Session.js~verifyToken",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/resources/Session.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "token",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "sanitizeDomain",
    "memberof": "lib/resources/Session.js",
    "longname": "lib/resources/Session.js~sanitizeDomain",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/resources/Session.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "domain",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Session",
    "memberof": "lib/resources/Session.js",
    "longname": "lib/resources/Session.js~Session",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/resources/Session.js",
    "importStyle": null,
    "description": "The Session resource",
    "lineNumber": 35,
    "pseudoExport": true,
    "interface": false,
    "extends": [
      "Base"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/resources/Session.js~Session",
    "longname": "lib/resources/Session.js~Session#constructor",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_resources",
    "memberof": "lib/resources/Session.js~Session",
    "longname": "lib/resources/Session.js~Session#_resources",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "apiMethods",
    "memberof": "lib/resources/Session.js~Session",
    "longname": "lib/resources/Session.js~Session#apiMethods",
    "access": null,
    "description": null,
    "lineNumber": 48,
    "return": {
      "nullable": null,
      "types": [
        "Array<string>"
      ],
      "spread": false,
      "description": "The names of all methods to be made available"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "override": true,
    "generator": false
  },
  {
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "actions",
    "memberof": "lib/resources/Session.js~Session",
    "longname": "lib/resources/Session.js~Session#actions",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "lib/resources/Session.js~Session",
    "longname": "lib/resources/Session.js~Session#init",
    "access": null,
    "description": "Dispatches the SET_SESSION event to the store",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "domain",
        "description": "The shop's domain (with or without the `.myshopify.com` suffix)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "The API token to be used"
      }
    ],
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "session",
    "memberof": "lib/resources/Session.js",
    "longname": "lib/resources/Session.js~session",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/resources/Session.js",
    "importStyle": "session",
    "description": null,
    "lineNumber": 77,
    "ignore": true,
    "type": {
      "types": [
        "lib/resources/Session.js~Session"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/resources/Shop.js",
    "memberof": null,
    "longname": "lib/resources/Shop.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport Base      from \"./Base\";\nimport Constants from \"../Constants\";\n\n/**\n * The Shop resource\n *\n * @extends {Base}\n */\nclass Shop extends Base {\n  constructor() {\n    super(\"shop\");\n\n    this._resources = this._resource;\n  }\n\n  /**\n   * @override\n   */\n  get actions() {\n    return {\n      mergeAction: Constants.Actions.SET_SHOP,\n      clearAction: Constants.Actions.CLEAR_SHOP\n    };\n  }\n}\n\n/** @ignore */\nexport default new Shop();\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Shop",
    "memberof": "lib/resources/Shop.js",
    "longname": "lib/resources/Shop.js~Shop",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/resources/Shop.js",
    "importStyle": null,
    "description": "The Shop resource",
    "lineNumber": 11,
    "pseudoExport": true,
    "interface": false,
    "extends": [
      "Base"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/resources/Shop.js~Shop",
    "longname": "lib/resources/Shop.js~Shop#constructor",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_resources",
    "memberof": "lib/resources/Shop.js~Shop",
    "longname": "lib/resources/Shop.js~Shop#_resources",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "actions",
    "memberof": "lib/resources/Shop.js~Shop",
    "longname": "lib/resources/Shop.js~Shop#actions",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "type": {
      "types": [
        "*"
      ]
    },
    "override": true,
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "shop",
    "memberof": "lib/resources/Shop.js",
    "longname": "lib/resources/Shop.js~shop",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/resources/Shop.js",
    "importStyle": "shop",
    "description": null,
    "lineNumber": 30,
    "ignore": true,
    "type": {
      "types": [
        "lib/resources/Shop.js~Shop"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/resources/__tests__/BaseTest.js",
    "memberof": null,
    "longname": "lib/resources/__tests__/BaseTest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.dontMock(\"../Base\");\njest.dontMock(\"../../utilities/URLHelpers\");\n\nimport Constants from \"../../Constants\";\n\ndescribe(\"Base\", () => {\n  var Base, actions, dispatcher;\n\n  beforeEach(() => {\n    Base       = require(\"../Base\");\n    actions    = new Base(\"thing\");\n    dispatcher = require(\"../../dispatcher/APIDispatcher\");\n  });\n\n  describe(\"#apiMethods\", () => {\n    it(\"returns all exported action method names\", () => {\n      expect(actions.apiMethods).toContain(\"clear\");\n      expect(actions.apiMethods).toContain(\"fetch\");\n      expect(actions.apiMethods).not.toContain(\"fetchCount\");\n      expect(actions.apiMethods).not.toContain(\"create\");\n      expect(actions.apiMethods).not.toContain(\"update\");\n      expect(actions.apiMethods).not.toContain(\"destroy\");\n    });\n\n    it(\"includes fetchCount when the resource is countable\", () => {\n      let countableResource = new Base(\"thing\", { countable: true });\n      expect(countableResource.apiMethods).toContain(\"fetchCount\");\n    });\n\n    it(\"includes create/update when the resource is createable\", () => {\n      let countableResource = new Base(\"thing\", { createable: true });\n      expect(countableResource.apiMethods).toContain(\"create\");\n      expect(countableResource.apiMethods).toContain(\"update\");\n    });\n\n    it(\"includes destroy when the resource is destroyable\", () => {\n      let countableResource = new Base(\"thing\", { destroyable: true });\n      expect(countableResource.apiMethods).toContain(\"destroy\");\n    });\n  });\n\n  describe(\"#fetch\", () => {\n    var api, request;\n    let actionType = Constants.Actions.MERGE_THINGS;\n\n    beforeEach(() => {\n      api = require(\"../../utilities/WebAPI\");\n    });\n\n    describe(\"when passed a single id\", () => {\n      let thing = { id: 1, title: \"Some Product\" };\n\n      beforeEach(() => {\n        stubRequest(api, \"get\", { thing });\n        request = actions.fetch(1);\n      });\n\n      it(\"fetches the single resource\", () => {\n        expect(api.get).toBeCalledWith(\"/admin/things/1.json\");\n      });\n\n      pit(\"dispatches the correct merge action\", () => {\n        return Promise.resolve(request).then(() => {\n          expect(dispatcher.dispatch).toBeCalledWith({ actionType, items: [thing] });\n        });\n      });\n    });\n\n    describe(\"when passed an object\", () => {\n      let things = [{ id: 1, title: \"Some Product\" }];\n\n      beforeEach(() => {\n        stubRequest(api, \"get\", { things });\n        request = actions.fetch({ ids: [1, 2, 3] });\n      });\n\n      it(\"fetches the resource collection with the appropriate query\", () => {\n        let encodedQuery = `ids=${encodeURIComponent(\"1,2,3\")}`;\n        expect(api.get).toBeCalledWith(`/admin/things.json?${encodedQuery}`);\n      });\n\n      pit(\"dispatches the correct merge event\", () => {\n        return Promise.resolve(request).then(() => {\n          expect(dispatcher.dispatch).toBeCalledWith({ actionType, items: things });\n        });\n      });\n    });\n\n    describe(\"when called without parameters\", () => {\n      let things = [\n        { id: 1, title: \"First Product\" },\n        { id: 2, title: \"Second Product\" }\n      ];\n\n      beforeEach(() => {\n        stubRequest(api, \"get\", { things });\n        request = actions.fetch();\n      });\n\n      it(\"fetches the resource collection\", () => {\n        expect(api.get).toBeCalledWith(\"/admin/things.json\");\n      });\n\n      pit(\"dispatches the correct merge action\", () => {\n        return Promise.resolve(request).then(() => {\n          expect(dispatcher.dispatch).toBeCalledWith({ actionType, items: things });\n        });\n      });\n    });\n  });\n\n  describe(\"#fetchCount\", () => {\n    let count      = 10;\n    let actionType = Constants.Actions.COUNT_THINGS;\n\n    var api, request;\n\n    beforeEach(() => {\n      api = require(\"../../utilities/WebAPI\");\n      stubRequest(api, \"get\", { count });\n    });\n\n    describe(\"when called without parameters\", () => {\n      beforeEach(() => {\n        request = actions.fetchCount();\n      });\n\n      it(\"fetches the correct endpoint\", () => {\n        expect(api.get).toBeCalledWith(\"/admin/things/count.json\");\n      });\n\n      pit(\"dispatches the count action\", () => {\n        return Promise.resolve(request).then(() => {\n          expect(dispatcher.dispatch).toBeCalledWith({ actionType, count, query: undefined });\n        });\n      });\n    });\n\n    describe(\"when called with query parameter\", () => {\n      let query = { type: \"test\", a: 1 };\n\n      beforeEach(() => {\n        request = actions.fetchCount(query);\n      });\n\n      it(\"fetches the correct endpoint\", () => {\n        expect(api.get).toBeCalledWith(\"/admin/things/count.json?type=test&a=1\");\n      });\n\n      pit(\"dispatches the count action\", () => {\n        return Promise.resolve(request).then(() => {\n          expect(dispatcher.dispatch).toBeCalledWith({ actionType, count, query });\n        });\n      });\n    });\n  });\n\n  describe(\"#create\", () => {\n    let actionType = Constants.Actions.MERGE_THINGS;\n    let thing      = { id: 1, title: \"Some Product\" };\n\n    var api, request;\n\n    beforeEach(() => {\n      api = require(\"../../utilities/WebAPI\");\n      stubRequest(api, \"post\", { thing });\n      request = actions.create(thing);\n    });\n\n    it(\"posts to the correct endpoint\", () => {\n      expect(api.post).toBeCalledWith(\"/admin/things.json\", { thing }, undefined);\n    });\n\n    pit(\"dispatches the merge action on success\", () => {\n      return Promise.resolve(request).then(() => {\n        expect(dispatcher.dispatch).toBeCalledWith({ actionType, items: [thing] });\n      });\n    });\n\n    describe(\"when supplied with options\", () => {\n      it(\"passes options to the fetch call\", () => {\n        let options = { headers: { \"Content-Type\": \"application/thing\" } };\n        request     = actions.create(thing, options);\n\n        expect(api.post).toBeCalledWith(\"/admin/things.json\", { thing }, options);\n      });\n    });\n  });\n\n  describe(\"#update\", () => {\n    let actionType = Constants.Actions.MERGE_THINGS;\n    let thing      = { id: 1, title: \"Some Product\" };\n\n    var api, request;\n\n    beforeEach(() => {\n      api = require(\"../../utilities/WebAPI\");\n      stubRequest(api, \"put\", { thing });\n      request = actions.update(1, thing);\n    });\n\n    it(\"requests the correct endpoint\", () => {\n      expect(api.put).toBeCalledWith(\"/admin/things/1.json\", { thing }, undefined);\n    });\n\n    pit(\"dispatches the merge action on success\", () => {\n      return Promise.resolve(request).then(() => {\n        expect(dispatcher.dispatch).toBeCalledWith({ actionType, items: [thing] });\n      });\n    });\n\n    describe(\"when supplied with options\", () => {\n      it(\"passes options to the fetch call\", () => {\n        let options = { headers: { \"Content-Type\": \"application/thing\" } };\n        request     = actions.update(1, thing, options);\n\n        expect(api.put).toBeCalledWith(\"/admin/things/1.json\", { thing }, options);\n      });\n    });\n  });\n\n  describe(\"#destroy\", () => {\n    let actionType = Constants.Actions.DESTROY_THINGS;\n\n    var api, request;\n\n    beforeEach(() => {\n      api = require(\"../../utilities/WebAPI\");\n      stubRequest(api, \"delete\", {});\n      request = actions.destroy(1);\n    });\n\n    it(\"requests the correct endpoint\", () => {\n      expect(api.delete).toBeCalledWith(\"/admin/things/1.json\", undefined);\n    });\n\n    pit(\"dispatches the correct action\", () => {\n      return Promise.resolve(request).then(() => {\n        expect(dispatcher.dispatch).toBeCalledWith({ actionType, id: 1 });\n      });\n    });\n\n    describe(\"when supplied with options\", () => {\n      it(\"passes options to the fetch call\", () => {\n        let options = { headers: { \"Content-Type\": \"application/thing\" } };\n        request     = actions.destroy(1, options);\n\n        expect(api.delete).toBeCalledWith(\"/admin/things/1.json\", options);\n      });\n    });\n  });\n\n  describe(\"#clear\", () => {\n    beforeEach(() => actions.clear());\n\n    it(\"dispatches the proper action\", () => {\n      let actionType = Constants.Actions.CLEAR_THINGS;\n      expect(dispatcher.dispatch).toBeCalledWith({ actionType });\n    });\n  });\n\n  describe(\"#urlFor\", () => {\n    var helpers = require(\"../../utilities/URLHelpers\");\n\n    describe(\"when given no parameters\", () => {\n      it(\"returns the collection's URI\", () => {\n        expect(actions.urlFor()).toBe(\"/admin/things.json\");\n      });\n    });\n\n    describe(\"when requesting a single resource\", () => {\n      it(\"returns the item's URI when passed a number\", () => {\n        expect(actions.urlFor(1)).toBe(\"/admin/things/1.json\");\n      });\n\n      it(\"returns the item's URI when passed a string\", () => {\n        expect(actions.urlFor(\"1\")).toBe(\"/admin/things/1.json\");\n      });\n\n      it(\"appends params object as query string when supplied\", () => {\n        expect(actions.urlFor(1, { type: \"thing\" })).toBe(\"/admin/things/1.json?type=thing\");\n      });\n    });\n\n    describe(\"when given an object\", () => {\n      it(\"parameterizes the object and adds it to the collection URI\", () => {\n        let query = helpers.toQueryString({ ids: [1, 2, 3] });\n        expect(actions.urlFor({ ids: [1, 2, 3] })).toBe(`/admin/things.json?${query}`);\n      });\n    });\n  });\n});\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/resources/__tests__/BlogTest.js",
    "memberof": null,
    "longname": "lib/resources/__tests__/BlogTest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.dontMock(\"../Base\");\njest.dontMock(\"../Blog\");\n\ndescribe(\"Blog\", () => {\n  var resource = require(\"../Blog\");\n\n  it(\"is countable\", () => {\n    expect(resource.apiMethods).toContain(\"fetchCount\");\n  });\n\n  it(\"is createable\", () => {\n    expect(resource.apiMethods).toContain(\"create\");\n    expect(resource.apiMethods).toContain(\"update\");\n  });\n\n  it(\"is destroyable\", () => {\n    expect(resource.apiMethods).toContain(\"destroy\");\n  });\n});\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/resources/__tests__/CountryTest.js",
    "memberof": null,
    "longname": "lib/resources/__tests__/CountryTest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.dontMock(\"../Base\");\njest.dontMock(\"../Country\");\n\ndescribe(\"Country\", () => {\n  var resource = require(\"../Country\");\n\n  it(\"is countable\", () => {\n    expect(resource.apiMethods).toContain(\"fetchCount\");\n  });\n\n  it(\"is createable\", () => {\n    expect(resource.apiMethods).toContain(\"create\");\n    expect(resource.apiMethods).toContain(\"update\");\n  });\n\n  it(\"is destroyable\", () => {\n    expect(resource.apiMethods).toContain(\"destroy\");\n  });\n});\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/resources/__tests__/OrderTest.js",
    "memberof": null,
    "longname": "lib/resources/__tests__/OrderTest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.dontMock(\"../Base\");\njest.dontMock(\"../Order\");\njest.dontMock(\"../../utilities/URLHelpers\");\n\nimport Constants from \"../../Constants\";\n\ndescribe(\"Order\", () => {\n  var resource;\n\n  beforeEach(() => {\n    resource = require(\"../Order\");\n  });\n\n  it(\"is countable\", () => {\n    expect(resource.apiMethods).toContain(\"fetchCount\");\n  });\n\n  it(\"is createable\", () => {\n    expect(resource.apiMethods).toContain(\"create\");\n    expect(resource.apiMethods).toContain(\"update\");\n  });\n\n  it(\"is destroyable\", () => {\n    expect(resource.apiMethods).toContain(\"destroy\");\n  });\n\n  describe(\"#custom actions\", () => {\n    let actionType = Constants.Actions.MERGE_ORDERS;\n    let order      = { id: 1, name: \"Order #1\" };\n\n    var api, request, dispatcher;\n\n    beforeEach(() => {\n      api        = require(\"../../utilities/WebAPI\");\n      dispatcher = require(\"../../dispatcher/APIDispatcher\");\n\n      stubRequest(api, \"post\", { order });\n    });\n\n    describe(\"#open\", () => {\n      beforeEach(() => {\n        request = resource.open(order.id);\n      });\n\n      it(\"posts to the correct endpoint\", () => {\n        expect(api.post).toBeCalledWith(`/admin/orders/${order.id}/open.json`, undefined);\n      });\n\n      pit(\"dispatches the merge action on success\", () => {\n        return Promise.resolve(request).then(() => {\n          expect(dispatcher.dispatch).toBeCalledWith({ actionType, items: [order] });\n        });\n      });\n    });\n\n    describe(\"#close\", () => {\n      beforeEach(() => {\n        request = resource.close(order.id);\n      });\n\n      it(\"posts to the correct endpoint\", () => {\n        expect(api.post).toBeCalledWith(`/admin/orders/${order.id}/close.json`, undefined);\n      });\n\n      pit(\"dispatches the merge action on success\", () => {\n        return Promise.resolve(request).then(() => {\n          expect(dispatcher.dispatch).toBeCalledWith({ actionType, items: [order] });\n        });\n      });\n    });\n\n    describe(\"#cancel\", () => {\n      beforeEach(() => {\n        request = resource.cancel(order.id);\n      });\n\n      it(\"posts to the correct endpoint\", () => {\n        expect(api.post).toBeCalledWith(`/admin/orders/${order.id}/cancel.json`, {});\n      });\n\n      it(\"includes options when supplied\", () => {\n        let options = { email: true };\n        request     = resource.cancel(order.id, options);\n\n        expect(api.post).toBeCalledWith(`/admin/orders/${order.id}/cancel.json`, options);\n      });\n\n      pit(\"dispatches the merge action on success\", () => {\n        return Promise.resolve(request).then(() => {\n          expect(dispatcher.dispatch).toBeCalledWith({ actionType, items: [order] });\n        });\n      });\n    });\n  });\n});\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/resources/__tests__/PageTest.js",
    "memberof": null,
    "longname": "lib/resources/__tests__/PageTest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.dontMock(\"../Base\");\njest.dontMock(\"../Page\");\n\ndescribe(\"Page\", () => {\n  var resource = require(\"../Page\");\n\n  it(\"is countable\", () => {\n    expect(resource.apiMethods).toContain(\"fetchCount\");\n  });\n\n  it(\"is createable\", () => {\n    expect(resource.apiMethods).toContain(\"create\");\n    expect(resource.apiMethods).toContain(\"update\");\n  });\n\n  it(\"is destroyable\", () => {\n    expect(resource.apiMethods).toContain(\"destroy\");\n  });\n});\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/resources/__tests__/ProductTest.js",
    "memberof": null,
    "longname": "lib/resources/__tests__/ProductTest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.dontMock(\"../Base\");\njest.dontMock(\"../Product\");\n\ndescribe(\"Product\", () => {\n  var resource = require(\"../Product\");\n\n  it(\"is countable\", () => {\n    expect(resource.apiMethods).toContain(\"fetchCount\");\n  });\n\n  it(\"is createable\", () => {\n    expect(resource.apiMethods).toContain(\"create\");\n    expect(resource.apiMethods).toContain(\"update\");\n  });\n\n  it(\"is destroyable\", () => {\n    expect(resource.apiMethods).toContain(\"destroy\");\n  });\n});\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/resources/__tests__/SessionTest.js",
    "memberof": null,
    "longname": "lib/resources/__tests__/SessionTest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.dontMock(\"../Base\");\njest.dontMock(\"../Session\");\n\nimport Constants from \"../../Constants\";\n\ndescribe(\"Session\", () => {\n  var dispatcher, resource;\n\n  beforeEach(() => {\n    dispatcher = require(\"../../dispatcher/APIDispatcher\");\n    resource   = require(\"../Session\");\n  });\n\n  describe(\"#apiMethods\", () => {\n    it(\"exports init and clear as action methods\", () => {\n      expect(resource.apiMethods).toEqual([\"init\", \"clear\"]);\n    });\n  });\n\n  describe(\"#init\", () => {\n    it(\"dispatches the action appropriately\", () => {\n      resource.init(\"david.myshopify.com\", \"my_shopify_api_token\");\n      expect(dispatcher.dispatch.mock.calls.length).toBe(1);\n\n      let payload = dispatcher.dispatch.mock.calls[0][0];\n      expect(payload.actionType).toBe(Constants.Actions.SET_SESSION);\n      expect(payload.domain).toBe(\"david.myshopify.com\");\n      expect(payload.accessToken).toBe(\"my_shopify_api_token\");\n    });\n\n    it(\"ensures myshopify.com domain when only host is supplied\", () => {\n      resource.init(\"david\", \"my_shopify_api_token\");\n\n      let payload = dispatcher.dispatch.mock.calls[0][0];\n      expect(payload.domain).toBe(\"david.myshopify.com\");\n    });\n\n    it(\"raises an error when the supplied domain is falsy\", () => {\n      expect(() => resource.init(null, \"authToken\")).toThrow();\n      expect(() => resource.init(undefined, \"authToken\")).toThrow();\n      expect(() => resource.init(\"\", \"authToken\")).toThrow();\n    });\n\n    it(\"raises an error when the supplied token is falsy\", () => {\n      expect(() => resource.init(\"domain\")).toThrow();\n      expect(() => resource.init(\"domain\", null)).toThrow();\n      expect(() => resource.init(\"domain\", undefined)).toThrow();\n      expect(() => resource.init(\"domain\", \"\")).toThrow();\n    });\n  });\n\n  describe(\"#clear\", () => {\n    beforeEach(() => resource.clear());\n\n    it(\"dispatches the proper action\", () => {\n      let actionType = Constants.Actions.CLEAR_SESSION;\n      expect(dispatcher.dispatch).toBeCalledWith({ actionType });\n    });\n  });\n});\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/resources/__tests__/ShopTest.js",
    "memberof": null,
    "longname": "lib/resources/__tests__/ShopTest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.dontMock(\"../Base\");\njest.dontMock(\"../Shop\");\n\nimport Constants from \"../../Constants\";\n\ndescribe(\"Shop\", () => {\n  var resource, dispatcher, api;\n\n  beforeEach(() => {\n    dispatcher = require(\"../../dispatcher/APIDispatcher\");\n    resource   = require(\"../Shop\");\n    api        = require(\"../../utilities/WebAPI\");\n  });\n\n  describe(\"#apiMethods\", () => {\n    it(\"exports fetch and clear as action methods\", () => {\n      expect(resource.apiMethods).toEqual([\"clear\", \"fetch\"]);\n    });\n  });\n\n  describe(\"#fetch\", () => {\n    let shop = { id: 1, name: \"My Shop\" };\n\n    var request;\n\n    beforeEach(() => {\n      stubRequest(api, \"get\", { shop });\n      request = resource.fetch();\n    });\n\n    it(\"makes the web request\", () => {\n      expect(api.get).toBeCalledWith(\"/admin/shop.json\");\n    });\n\n    pit(\"dispatches the action once the shop is retrieved\", () => {\n      return Promise.resolve(request).then(() => {\n        expect(dispatcher.dispatch.mock.calls.length).toBe(1);\n\n        let payload = dispatcher.dispatch.mock.calls[0][0];\n        expect(payload.actionType).toBe(Constants.Actions.SET_SHOP);\n        expect(payload.items).toEqual([shop]);\n      });\n    });\n\n    it(\"doesn't forward arguments to super\", () => {\n      resource.fetch({ name: \"Some Shop\" });\n      expect(api.get).toBeCalledWith(\"/admin/shop.json\");\n    });\n  });\n\n  describe(\"#clear\", () => {\n    beforeEach(() => resource.clear());\n\n    it(\"dispatches the proper action\", () => {\n      let actionType = Constants.Actions.CLEAR_SHOP;\n      expect(dispatcher.dispatch).toBeCalledWith({ actionType });\n    });\n  });\n});\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/stores/BaseStore.js",
    "memberof": null,
    "longname": "lib/stores/BaseStore.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport Flux from \"flux/utils\";\nimport _    from \"lodash\";\n\nfunction mergeItems(state, items) {\n  let initialState = state.set(items[0].id, items[0]);\n\n  return items.reduce((previous, current) => {\n    return previous.set(current.id, current);\n  }, initialState);\n}\n\n/**\n * A base class for resource stores.\n *\n * Stores handle dispatch events from resources. When anything changes, the store's change event is omitted.\n *\n * This store exposes a few methods (from it's base class). These include:\n *\n * * `at(key)`  - returns the object with the specified key. Raises when not found\n * * `get(key)` - returns the object with the specified key. Returns undefined when not found\n * * `has(key)` - returns whether or not an object with the specified key exists in the store\n *\n * @extends {FluxMapStore}\n *\n * @example\n * import APIDispatcher from \"../dispatcher/APIDispatcher\";\n * import Actions       from \"../utilities/Actions\";\n * import Base          from \"./Base\";\n *\n * let store = new BaseStore(APIDispatcher, new Actions(\"products\"));\n *\n * // listen for change events\n * store.addListener(() => console.log(store.get(1)));\n *\n * // will cause the store to update the state and emit it's change event\n * APIDispatcher.dispatch({\n *   actionType: \"MERGE_PRODUCTS\",\n *   items: [{ id: 1, title: \"My Product\" }]\n * });\n */\nexport default class BaseStore extends Flux.MapStore {\n  /**\n   * @param {APIDispatcher} dispatcher - The dispatcher to register with\n   * @param {Actions} actions\n   */\n  constructor(dispatcher, actions) {\n    super(dispatcher);\n    this._actions = actions;\n  }\n\n  /**\n   * Queries the store for resources matching the source object\n   *\n   * @param {QueryObject} source\n   *\n   * @return {Array<object>} Resources that match the query\n   */\n  where(source) {\n    return _.where(this.getState().toArray(), source);\n  }\n\n  /**\n   * Used to reduce a stream of actions coming from the dispatcher into a\n   * single state object. This will handle merge and clear actions for this resource.\n   *\n   * **This method should not be called directly**, but rather via a call to the dispatcher's `dispatch` method.\n   *\n   * @param {object} state - The current state\n   * @param {object} action - The action sent by the dispatcher\n   *\n   * @return {object} The new state for this store\n   */\n  reduce(state, action) {\n    switch(action.actionType) {\n      case this._actions.mergeAction:\n        return mergeItems(state, action.items);\n      case this._actions.clearAction:\n        return state.clear();\n      case this._actions.destroyAction:\n        return state.delete(action.id);\n      default:\n        return state;\n    }\n  }\n\n  /**\n   * Determines whether or not the state of this store has changed.\n   *\n   * **This method should not be called directly**\n   *\n   * @param {object} state1 - The original state\n   * @param {object} state2 - The new state\n   *\n   * @return {boolean} Whether or not the state's are identical\n   */\n  areEqual(state1, state2) {\n    return _.isEqual(state1, state2);\n  }\n}\n"
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "mergeItems",
    "memberof": "lib/stores/BaseStore.js",
    "longname": "lib/stores/BaseStore.js~mergeItems",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/stores/BaseStore.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "items",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "BaseStore",
    "memberof": "lib/stores/BaseStore.js",
    "longname": "lib/stores/BaseStore.js~BaseStore",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/stores/BaseStore.js",
    "importStyle": "BaseStore",
    "description": "A base class for resource stores.\n\nStores handle dispatch events from resources. When anything changes, the store's change event is omitted.\n\nThis store exposes a few methods (from it's base class). These include:\n\n* `at(key)`  - returns the object with the specified key. Raises when not found\n* `get(key)` - returns the object with the specified key. Returns undefined when not found\n* `has(key)` - returns whether or not an object with the specified key exists in the store",
    "examples": [
      "import APIDispatcher from \"../dispatcher/APIDispatcher\";\nimport Actions       from \"../utilities/Actions\";\nimport Base          from \"./Base\";\n\nlet store = new BaseStore(APIDispatcher, new Actions(\"products\"));\n\n// listen for change events\nstore.addListener(() => console.log(store.get(1)));\n\n// will cause the store to update the state and emit it's change event\nAPIDispatcher.dispatch({\n  actionType: \"MERGE_PRODUCTS\",\n  items: [{ id: 1, title: \"My Product\" }]\n});"
    ],
    "lineNumber": 43,
    "interface": false,
    "extends": [
      "FluxMapStore"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/stores/BaseStore.js~BaseStore",
    "longname": "lib/stores/BaseStore.js~BaseStore#constructor",
    "access": null,
    "description": null,
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "APIDispatcher"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatcher",
        "description": "The dispatcher to register with"
      },
      {
        "nullable": null,
        "types": [
          "Actions"
        ],
        "spread": false,
        "optional": false,
        "name": "actions",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_actions",
    "memberof": "lib/stores/BaseStore.js~BaseStore",
    "longname": "lib/stores/BaseStore.js~BaseStore#_actions",
    "access": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "where",
    "memberof": "lib/stores/BaseStore.js~BaseStore",
    "longname": "lib/stores/BaseStore.js~BaseStore#where",
    "access": null,
    "description": "Queries the store for resources matching the source object",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "QueryObject"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<object>"
      ],
      "spread": false,
      "description": "Resources that match the query"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "reduce",
    "memberof": "lib/stores/BaseStore.js~BaseStore",
    "longname": "lib/stores/BaseStore.js~BaseStore#reduce",
    "access": null,
    "description": "Used to reduce a stream of actions coming from the dispatcher into a\nsingle state object. This will handle merge and clear actions for this resource.\n\n**This method should not be called directly**, but rather via a call to the dispatcher's `dispatch` method.",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "The current state"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "The action sent by the dispatcher"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "The new state for this store"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "areEqual",
    "memberof": "lib/stores/BaseStore.js~BaseStore",
    "longname": "lib/stores/BaseStore.js~BaseStore#areEqual",
    "access": null,
    "description": "Determines whether or not the state of this store has changed.\n\n**This method should not be called directly**",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state1",
        "description": "The original state"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state2",
        "description": "The new state"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the state's are identical"
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/stores/BlogsStore.js",
    "memberof": null,
    "longname": "lib/stores/BlogsStore.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport Actions        from \"../utilities/Actions\";\nimport APIDispatcher  from \"../dispatcher/APIDispatcher\";\nimport CountableStore from \"./CountableStore\";\n\n/**\n * The blogs store\n *\n * @extends {CountableStore}\n */\nclass BlogsStore extends CountableStore {\n  /**\n   * Sets the the dispatcher and appropriate actions for blogs\n   *\n   * @param {APIDispatcher} dispatcher - The dispatcher to register with\n   */\n  constructor(dispatcher) {\n    super(dispatcher, new Actions(\"blogs\"));\n  }\n}\n\n/** @ignore */\nexport default new BlogsStore(APIDispatcher);\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "BlogsStore",
    "memberof": "lib/stores/BlogsStore.js",
    "longname": "lib/stores/BlogsStore.js~BlogsStore",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/stores/BlogsStore.js",
    "importStyle": null,
    "description": "The blogs store",
    "lineNumber": 12,
    "pseudoExport": true,
    "interface": false,
    "extends": [
      "CountableStore"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/stores/BlogsStore.js~BlogsStore",
    "longname": "lib/stores/BlogsStore.js~BlogsStore#constructor",
    "access": null,
    "description": "Sets the the dispatcher and appropriate actions for blogs",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "APIDispatcher"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatcher",
        "description": "The dispatcher to register with"
      }
    ],
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "blogsStore",
    "memberof": "lib/stores/BlogsStore.js",
    "longname": "lib/stores/BlogsStore.js~blogsStore",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/stores/BlogsStore.js",
    "importStyle": "blogsStore",
    "description": null,
    "lineNumber": 24,
    "ignore": true,
    "type": {
      "types": [
        "lib/stores/BlogsStore.js~BlogsStore"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/stores/CountableStore.js",
    "memberof": null,
    "longname": "lib/stores/CountableStore.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport BaseStore  from \"./BaseStore\";\nimport ObjectHash from \"object-hash\";\n\n/**\n * An object representing a resource query.\n *\n * Can be one of the following:\n *   * `number` - Assumes the value is a resource id\n *   * `string` - Assumes the value is a resource id\n *   * `object` - Will be converted to a query string\n * @typedef {number|string|object} ResourceQuery\n */\n\nfunction hash(obj) {\n  return ObjectHash.sha1(obj || {});\n}\n\n/**\n * A base class for resource stores that are countable (have /count.json endpoints).\n *\n * @extends {BaseStore}\n */\nexport default class extends BaseStore {\n  /**\n   * @param {APIDispatcher} dispatcher - The dispatcher to register with\n   * @param {Actions} actions\n   */\n  constructor(dispatcher, actions) {\n    super(dispatcher, actions);\n    this._counts = {};\n  }\n\n  /**\n   * Returns the count for the given query\n   *\n   * @param {ResourceQuery} [query]\n   *\n   * @return {number}\n   */\n  count(query) {\n    return this._counts[hash(query)] || 0;\n  }\n\n  /**\n   * @override\n   */\n  reduce(state, action) {\n    if (action.actionType === this._actions.countAction) {\n      this._counts[hash(action.query)] = action.count;\n      this.__emitChange();\n      return state;\n    }\n\n    return super.reduce(state, action);\n  }\n}\n"
  },
  {
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "ResourceQuery",
    "memberof": "lib/stores/CountableStore.js",
    "longname": "lib/stores/CountableStore.js~ResourceQuery",
    "access": null,
    "description": "An object representing a resource query.\n\nCan be one of the following:\n  * `number` - Assumes the value is a resource id\n  * `string` - Assumes the value is a resource id\n  * `object` - Will be converted to a query string",
    "lineNumber": 16,
    "type": {
      "types": [
        "number",
        "string",
        "object"
      ],
      "optional": false,
      "name": "ResourceQuery"
    }
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "CountableStore",
    "memberof": "lib/stores/CountableStore.js",
    "longname": "lib/stores/CountableStore.js~CountableStore",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/stores/CountableStore.js",
    "importStyle": "CountableStore",
    "description": "A base class for resource stores that are countable (have /count.json endpoints).",
    "lineNumber": 25,
    "interface": false,
    "extends": [
      "BaseStore"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/stores/CountableStore.js~CountableStore",
    "longname": "lib/stores/CountableStore.js~CountableStore#constructor",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "APIDispatcher"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatcher",
        "description": "The dispatcher to register with"
      },
      {
        "nullable": null,
        "types": [
          "Actions"
        ],
        "spread": false,
        "optional": false,
        "name": "actions",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_counts",
    "memberof": "lib/stores/CountableStore.js~CountableStore",
    "longname": "lib/stores/CountableStore.js~CountableStore#_counts",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "count",
    "memberof": "lib/stores/CountableStore.js~CountableStore",
    "longname": "lib/stores/CountableStore.js~CountableStore#count",
    "access": null,
    "description": "Returns the count for the given query",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "ResourceQuery"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "reduce",
    "memberof": "lib/stores/CountableStore.js~CountableStore",
    "longname": "lib/stores/CountableStore.js~CountableStore#reduce",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "override": true,
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/stores/CountriesStore.js",
    "memberof": null,
    "longname": "lib/stores/CountriesStore.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport Actions        from \"../utilities/Actions\";\nimport APIDispatcher  from \"../dispatcher/APIDispatcher\";\nimport CountableStore from \"./CountableStore\";\n\n/**\n * The Countries store\n *\n * @extends {CountableStore}\n */\nclass CountriesStore extends CountableStore {\n  /**\n   * Sets the dispatcher and appropriate actions for countries\n   *\n   * @param {APIDispatcher} dispatcher - The dispatcher to register with\n   */\n  constructor(dispatcher) {\n    super(dispatcher, new Actions(\"countries\"));\n  }\n}\n\n/** @ignore */\nexport default new CountriesStore(APIDispatcher);\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "CountriesStore",
    "memberof": "lib/stores/CountriesStore.js",
    "longname": "lib/stores/CountriesStore.js~CountriesStore",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/stores/CountriesStore.js",
    "importStyle": null,
    "description": "The Countries store",
    "lineNumber": 12,
    "pseudoExport": true,
    "interface": false,
    "extends": [
      "CountableStore"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/stores/CountriesStore.js~CountriesStore",
    "longname": "lib/stores/CountriesStore.js~CountriesStore#constructor",
    "access": null,
    "description": "Sets the dispatcher and appropriate actions for countries",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "APIDispatcher"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatcher",
        "description": "The dispatcher to register with"
      }
    ],
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "countriesStore",
    "memberof": "lib/stores/CountriesStore.js",
    "longname": "lib/stores/CountriesStore.js~countriesStore",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/stores/CountriesStore.js",
    "importStyle": "countriesStore",
    "description": null,
    "lineNumber": 24,
    "ignore": true,
    "type": {
      "types": [
        "lib/stores/CountriesStore.js~CountriesStore"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/stores/OrdersStore.js",
    "memberof": null,
    "longname": "lib/stores/OrdersStore.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport Actions        from \"../utilities/Actions\";\nimport APIDispatcher  from \"../dispatcher/APIDispatcher\";\nimport CountableStore from \"./CountableStore\";\n\n/**\n * The Orders store\n *\n * @extends {CountableStore}\n */\nclass OrdersStore extends CountableStore {\n  /**\n   * Sets the dispatcher and appropriate actions for orders\n   *\n   * @param {APIDispatcher} dispatcher - The dispatcher to register with\n   */\n  constructor(dispatcher) {\n    super(dispatcher, new Actions(\"orders\"));\n  }\n}\n\n/** @ignore */\nexport default new OrdersStore(APIDispatcher);\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "OrdersStore",
    "memberof": "lib/stores/OrdersStore.js",
    "longname": "lib/stores/OrdersStore.js~OrdersStore",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/stores/OrdersStore.js",
    "importStyle": null,
    "description": "The Orders store",
    "lineNumber": 12,
    "pseudoExport": true,
    "interface": false,
    "extends": [
      "CountableStore"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/stores/OrdersStore.js~OrdersStore",
    "longname": "lib/stores/OrdersStore.js~OrdersStore#constructor",
    "access": null,
    "description": "Sets the dispatcher and appropriate actions for orders",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "APIDispatcher"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatcher",
        "description": "The dispatcher to register with"
      }
    ],
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ordersStore",
    "memberof": "lib/stores/OrdersStore.js",
    "longname": "lib/stores/OrdersStore.js~ordersStore",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/stores/OrdersStore.js",
    "importStyle": "ordersStore",
    "description": null,
    "lineNumber": 24,
    "ignore": true,
    "type": {
      "types": [
        "lib/stores/OrdersStore.js~OrdersStore"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/stores/PagesStore.js",
    "memberof": null,
    "longname": "lib/stores/PagesStore.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport Actions        from \"../utilities/Actions\";\nimport APIDispatcher  from \"../dispatcher/APIDispatcher\";\nimport CountableStore from \"./CountableStore\";\n\n/**\n * The pages store\n *\n * @extends {CountableStore}\n */\nclass PagesStore extends CountableStore {\n  /**\n   * Sets the the dispatcher and appropriate actions for pages\n   *\n   * @param {APIDispatcher} dispatcher - The dispatcher to register with\n   */\n  constructor(dispatcher) {\n    super(dispatcher, new Actions(\"pages\"));\n  }\n}\n\n/** @ignore */\nexport default new PagesStore(APIDispatcher);\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PagesStore",
    "memberof": "lib/stores/PagesStore.js",
    "longname": "lib/stores/PagesStore.js~PagesStore",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/stores/PagesStore.js",
    "importStyle": null,
    "description": "The pages store",
    "lineNumber": 12,
    "pseudoExport": true,
    "interface": false,
    "extends": [
      "CountableStore"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/stores/PagesStore.js~PagesStore",
    "longname": "lib/stores/PagesStore.js~PagesStore#constructor",
    "access": null,
    "description": "Sets the the dispatcher and appropriate actions for pages",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "APIDispatcher"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatcher",
        "description": "The dispatcher to register with"
      }
    ],
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "pagesStore",
    "memberof": "lib/stores/PagesStore.js",
    "longname": "lib/stores/PagesStore.js~pagesStore",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/stores/PagesStore.js",
    "importStyle": "pagesStore",
    "description": null,
    "lineNumber": 24,
    "ignore": true,
    "type": {
      "types": [
        "lib/stores/PagesStore.js~PagesStore"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/stores/ProductsStore.js",
    "memberof": null,
    "longname": "lib/stores/ProductsStore.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport Actions        from \"../utilities/Actions\";\nimport APIDispatcher  from \"../dispatcher/APIDispatcher\";\nimport CountableStore from \"./CountableStore\";\n\n/**\n * The products store\n *\n * @extends {CountableStore}\n */\nclass ProductsStore extends CountableStore {\n  /**\n   * Sets the the dispatcher and appropriate actions for products\n   *\n   * @param {APIDispatcher} dispatcher - The dispatcher to regiter with\n   */\n  constructor(dispatcher) {\n    super(dispatcher, new Actions(\"products\"));\n  }\n}\n\n/** @ignore */\nexport default new ProductsStore(APIDispatcher);\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ProductsStore",
    "memberof": "lib/stores/ProductsStore.js",
    "longname": "lib/stores/ProductsStore.js~ProductsStore",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/stores/ProductsStore.js",
    "importStyle": null,
    "description": "The products store",
    "lineNumber": 12,
    "pseudoExport": true,
    "interface": false,
    "extends": [
      "CountableStore"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/stores/ProductsStore.js~ProductsStore",
    "longname": "lib/stores/ProductsStore.js~ProductsStore#constructor",
    "access": null,
    "description": "Sets the the dispatcher and appropriate actions for products",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "APIDispatcher"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatcher",
        "description": "The dispatcher to regiter with"
      }
    ],
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "productsStore",
    "memberof": "lib/stores/ProductsStore.js",
    "longname": "lib/stores/ProductsStore.js~productsStore",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/stores/ProductsStore.js",
    "importStyle": "productsStore",
    "description": null,
    "lineNumber": 24,
    "ignore": true,
    "type": {
      "types": [
        "lib/stores/ProductsStore.js~ProductsStore"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/stores/SessionStore.js",
    "memberof": null,
    "longname": "lib/stores/SessionStore.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport APIDispatcher from \"../dispatcher/APIDispatcher\";\nimport Constants     from \"../Constants\";\nimport Flux          from \"flux/utils\";\n\nvar domain      = null;\nvar accessToken = null;\n\n/** @ignore */\nconst { Store } = Flux;\n\n/**\n * The session store\n *\n * This class doesn't inherit from the base store. Instead, it handles the `SET_SESSION` event. This event expects a\n * domain and accessToken property.\n */\nclass SessionStore extends Store {\n  /**\n   * Gets the domain for the session's shop\n   *\n   * @return {string}\n   */\n  getDomain() {\n    return domain;\n  }\n\n  /**\n   * Gets the API access token register for this session\n   *\n   * @return {string}\n   */\n  getAccessToken() {\n    return accessToken;\n  }\n\n  __onDispatch(action) {\n    switch(action.actionType) {\n      case Constants.Actions.SET_SESSION:\n        domain      = action.domain;\n        accessToken = action.accessToken;\n        this.__emitChange();\n        break;\n      default:\n        // no-op\n    }\n  }\n}\n\n/** @ignore */\nexport default new SessionStore(APIDispatcher);\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "domain",
    "memberof": "lib/stores/SessionStore.js",
    "longname": "lib/stores/SessionStore.js~domain",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/stores/SessionStore.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "accessToken",
    "memberof": "lib/stores/SessionStore.js",
    "longname": "lib/stores/SessionStore.js~accessToken",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/stores/SessionStore.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Store",
    "memberof": "lib/stores/SessionStore.js",
    "longname": "lib/stores/SessionStore.js~Store",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/stores/SessionStore.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SessionStore",
    "memberof": "lib/stores/SessionStore.js",
    "longname": "lib/stores/SessionStore.js~SessionStore",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/stores/SessionStore.js",
    "importStyle": null,
    "description": "The session store\n\nThis class doesn't inherit from the base store. Instead, it handles the `SET_SESSION` event. This event expects a\ndomain and accessToken property.",
    "lineNumber": 19,
    "pseudoExport": true,
    "interface": false,
    "extends": [
      "Store"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getDomain",
    "memberof": "lib/stores/SessionStore.js~SessionStore",
    "longname": "lib/stores/SessionStore.js~SessionStore#getDomain",
    "access": null,
    "description": "Gets the domain for the session's shop",
    "lineNumber": 25,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAccessToken",
    "memberof": "lib/stores/SessionStore.js~SessionStore",
    "longname": "lib/stores/SessionStore.js~SessionStore#getAccessToken",
    "access": null,
    "description": "Gets the API access token register for this session",
    "lineNumber": 34,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "__onDispatch",
    "memberof": "lib/stores/SessionStore.js~SessionStore",
    "longname": "lib/stores/SessionStore.js~SessionStore#__onDispatch",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "sessionStore",
    "memberof": "lib/stores/SessionStore.js",
    "longname": "lib/stores/SessionStore.js~sessionStore",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/stores/SessionStore.js",
    "importStyle": "sessionStore",
    "description": null,
    "lineNumber": 52,
    "ignore": true,
    "type": {
      "types": [
        "lib/stores/SessionStore.js~SessionStore"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/stores/ShopStore.js",
    "memberof": null,
    "longname": "lib/stores/ShopStore.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport APIDispatcher from \"../dispatcher/APIDispatcher\";\nimport Constants     from \"../Constants\";\nimport Flux          from \"flux/utils\";\n\nvar shop = null;\n\nconst { Store } = Flux;\n\n/**\n * The shop store\n *\n * @extends {Store}\n */\nclass ShopStore extends Store {\n  /**\n   * Gets the current shop based on the domain and accessToken registered with the session\n   *\n   * @return {object} The shop resource\n   */\n  getCurrent() {\n    return shop;\n  }\n\n  __onDispatch(action) {\n    switch(action.actionType) {\n      case Constants.Actions.SET_SHOP:\n        shop = action.items[0];\n        this.__emitChange();\n        break;\n      case Constants.Actions.CLEAR_SHOP:\n        shop = null;\n        this.__emitChange();\n        break;\n      default:\n        // no-op\n        break;\n    }\n  }\n}\n\n/** @ignore */\nexport default new ShopStore(APIDispatcher);\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "shop",
    "memberof": "lib/stores/ShopStore.js",
    "longname": "lib/stores/ShopStore.js~shop",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/stores/ShopStore.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Store",
    "memberof": "lib/stores/ShopStore.js",
    "longname": "lib/stores/ShopStore.js~Store",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/stores/ShopStore.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ShopStore",
    "memberof": "lib/stores/ShopStore.js",
    "longname": "lib/stores/ShopStore.js~ShopStore",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/stores/ShopStore.js",
    "importStyle": null,
    "description": "The shop store",
    "lineNumber": 16,
    "pseudoExport": true,
    "interface": false,
    "extends": [
      "Store"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getCurrent",
    "memberof": "lib/stores/ShopStore.js~ShopStore",
    "longname": "lib/stores/ShopStore.js~ShopStore#getCurrent",
    "access": null,
    "description": "Gets the current shop based on the domain and accessToken registered with the session",
    "lineNumber": 22,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "The shop resource"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "__onDispatch",
    "memberof": "lib/stores/ShopStore.js~ShopStore",
    "longname": "lib/stores/ShopStore.js~ShopStore#__onDispatch",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "shopStore",
    "memberof": "lib/stores/ShopStore.js",
    "longname": "lib/stores/ShopStore.js~shopStore",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/stores/ShopStore.js",
    "importStyle": "shopStore",
    "description": null,
    "lineNumber": 44,
    "ignore": true,
    "type": {
      "types": [
        "lib/stores/ShopStore.js~ShopStore"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/stores/__tests__/BaseStoreTest.js",
    "memberof": null,
    "longname": "lib/stores/__tests__/BaseStoreTest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.dontMock(\"../../dispatcher/APIDispatcher\");\njest.dontMock(\"flux/utils\");\njest.dontMock(\"../BaseStore\");\n\nimport Actions   from \"../../utilities/Actions\";\nimport Constants from \"../../Constants\";\n\nconst BaseStore = require(\"../BaseStore\");\n\ndescribe(\"Base\", () => {\n  var store, dispatcher;\n\n  class ThingsStore extends BaseStore {\n    constructor(dispatcher) {\n      super(dispatcher, new Actions(\"things\"));\n    }\n  }\n\n  beforeEach(() => {\n    dispatcher = require(\"../../dispatcher/APIDispatcher\");\n    store      = new ThingsStore(dispatcher);\n  });\n\n  describe(\"where\", () => {\n    beforeEach(() => {\n      dispatcher.dispatch({\n        actionType: Constants.Actions.MERGE_THINGS,\n        items: [\n          { id: 1, title: \"My First Product\", collection: { title: \"col\" } },\n          { id: 2, title: \"My Second Product\", collection: null, tags: [\"cool\"] },\n          { id: 3, title: \"My Third Product\", tags: [\"cool\", \"thing\"] },\n          { id: 4, children: [{ title: \"First Child\" }, { title: \"Second Child\" }] }\n        ]\n      });\n    });\n\n    it(\"filters by simple properties\", () => {\n      let result   = store.where({ id: 1 });\n      expect(result.length).toBe(1);\n    });\n\n    it(\"filters simple array properties\", () => {\n      let result = store.where({ tags: [\"cool\"] });\n      expect(result.length).toBe(2);\n    });\n\n    it(\"filters complex array properties\", () => {\n      let result = store.where({ children: [{ title: \"First Child\" }] });\n      expect(result.length).toBe(1);\n    });\n\n    it(\"filters child objects\", () => {\n      let result = store.where({ collection: { title: \"col\" } });\n      expect(result.length).toBe(1);\n    });\n\n    it(\"returns an empty array when no matches are found\", () => {\n      let result = store.where({ tags: [\"notfound\"] });\n      expect(result.length).toBe(0);\n    });\n  });\n\n  describe(\"action handling\", () => {\n    var changeEvent;\n\n    beforeEach(() => {\n      changeEvent          = jest.genMockFunction();\n      store.__emitter.emit = changeEvent;\n    });\n\n    describe(\"merge\", () => {\n      it(\"responds to actions appropriately\", () => {\n        expect(store.has(1)).toBe(false);\n        expect(store.get(1)).toBeUndefined();\n\n        dispatcher.dispatch({\n          actionType: Constants.Actions.MERGE_THINGS,\n          items: [\n            { id: 1, title: \"My Product\" }\n          ]\n        });\n\n        expect(store.has(1)).toBe(true);\n        expect(store.get(1).title).toBe(\"My Product\");\n      });\n\n      it(\"only emits a single change event even with multiple values\", () => {\n        dispatcher.dispatch({\n          actionType: Constants.Actions.MERGE_THINGS,\n          items: [\n            { id: 1, title: \"My First Product\" },\n            { id: 2, title: \"My Second Product\" },\n            { id: 3, title: \"My Third Product\" }\n          ]\n        });\n\n        expect(store.has(1)).toBe(true);\n        expect(store.has(2)).toBe(true);\n        expect(store.has(3)).toBe(true);\n\n        expect(changeEvent.mock.calls.length).toBe(1);\n      });\n\n      it(\"doesn't emit a change event when the values haven't changed\", () => {\n        dispatcher.dispatch({\n          actionType: Constants.Actions.MERGE_THINGS,\n          items: [\n            { id: 1, title: \"My Product\" }\n          ]\n        });\n\n        expect(changeEvent.mock.calls.length).toBe(1);\n\n        dispatcher.dispatch({\n          actionType: Constants.Actions.MERGE_THINGS,\n          items: [\n            { id: 1, title: \"My Product\" }\n          ]\n        });\n\n        expect(changeEvent.mock.calls.length).toBe(1);\n      });\n    });\n\n    describe(\"clear\", () => {\n      it(\"clears the cache\", () => {\n        dispatcher.dispatch({\n          actionType: Constants.Actions.MERGE_THINGS,\n          items: [\n            { id: 1, title: \"My Product\" }\n          ]\n        });\n\n        expect(changeEvent.mock.calls.length).toBe(1);\n\n        dispatcher.dispatch({ actionType: Constants.Actions.CLEAR_THINGS });\n\n        expect(store.has(1)).toBe(false);\n        expect(changeEvent.mock.calls.length).toBe(2);\n      });\n    });\n\n    describe(\"destroy\", () => {\n      it(\"removes the resource from state\", () => {\n        dispatcher.dispatch({\n          actionType: Constants.Actions.MERGE_THINGS,\n          items: [\n            { id: 1, title: \"My Product\" },\n            { id: 2, title: \"My Second Product\" }\n          ]\n        });\n\n        dispatcher.dispatch({ actionType: Constants.Actions.DESTROY_THINGS, id: 1});\n        expect(changeEvent.mock.calls.length).toBe(2);\n\n        expect(store.has(1)).toBe(false);\n        expect(store.has(2)).toBe(true);\n      });\n    });\n  });\n});\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "BaseStore",
    "memberof": "lib/stores/__tests__/BaseStoreTest.js",
    "longname": "lib/stores/__tests__/BaseStoreTest.js~BaseStore",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/stores/__tests__/BaseStoreTest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/stores/__tests__/CountableStoreTest.js",
    "memberof": null,
    "longname": "lib/stores/__tests__/CountableStoreTest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.dontMock(\"flux/utils\");\njest.dontMock(\"../../dispatcher/APIDispatcher\");\njest.dontMock(\"../BaseStore\");\njest.dontMock(\"../CountableStore\");\n\nimport Actions   from \"../../utilities/Actions\";\nimport Constants from \"../../Constants\";\n\nconst CountableStore = require(\"../CountableStore\");\n\ndescribe(\"CountableStore\", () => {\n  var store, dispatcher;\n\n  class ThingsStore extends CountableStore {\n    constructor(dispatcher) {\n      super(dispatcher, new Actions(\"things\"));\n    }\n  }\n\n  beforeEach(() => {\n    dispatcher = require(\"../../dispatcher/APIDispatcher\");\n    store      = new ThingsStore(dispatcher);\n  });\n\n  describe(\"action handling\", () => {\n    var changeEvent;\n\n    beforeEach(() => {\n      changeEvent          = jest.genMockFunction();\n      store.__emitter.emit = changeEvent;\n    });\n\n    describe(\"count\", () => {\n      beforeEach(() => {\n        dispatcher.dispatch({\n          actionType: Constants.Actions.COUNT_THINGS,\n          count: 10\n        });\n      });\n\n      it(\"stores the count\", () => {\n        expect(store.count()).toBe(10);\n      });\n\n      it(\"differentiates between queries\", () => {\n        dispatcher.dispatch({\n          actionType: Constants.Actions.COUNT_THINGS,\n          count: 20,\n          query: { test: \"value\" }\n        });\n\n        expect(store.count()).toBe(10);\n        expect(store.count({ test: \"value\" })).toBe(20);\n      });\n\n      it(\"triggers the change event\", () => {\n        expect(changeEvent.mock.calls.length).toBe(1);\n      });\n    });\n  });\n\n  describe(\"#count\", () => {\n    it(\"returns the count for the specified query\", () => {\n      dispatcher.dispatch({\n        actionType: Constants.Actions.COUNT_THINGS,\n        count: 10,\n        query: { test: \"some value\" }\n      });\n\n      expect(store.count({ test: \"some value\" })).toBe(10);\n    });\n\n    it(\"doesn't care about key order\", () => {\n      dispatcher.dispatch({\n        actionType: Constants.Actions.COUNT_THINGS,\n        count: 4,\n        query: { a: 1, b: 2}\n      });\n\n      expect(store.count({ b: 2, a: 1 })).toBe(4);\n    });\n\n    it(\"returns 0 when no results exist\", () => {\n      expect(store.count()).toBe(0);\n    });\n\n    it(\"return 0 when query is falsy\", () => {\n      expect(store.count()).toBe(0);\n      expect(store.count(null)).toBe(0);\n      expect(store.count(undefined)).toBe(0);\n      expect(store.count(\"\")).toBe(0);\n    });\n  });\n});\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "CountableStore",
    "memberof": "lib/stores/__tests__/CountableStoreTest.js",
    "longname": "lib/stores/__tests__/CountableStoreTest.js~CountableStore",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/stores/__tests__/CountableStoreTest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/stores/__tests__/SessionStoreTest.js",
    "memberof": null,
    "longname": "lib/stores/__tests__/SessionStoreTest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.dontMock(\"flux/utils\");\njest.dontMock(\"../SessionStore\");\n\ndescribe(\"SessionStore\", () => {\n  var SessionStore, APIDispatcher;\n\n  beforeEach(() => {\n    APIDispatcher = require(\"../../dispatcher/APIDispatcher\");\n    SessionStore  = require(\"../SessionStore\");\n  });\n\n  it(\"registers a callback with the dispatcher\", () => {\n    expect(APIDispatcher.register.mock.calls.length).toBe(1);\n  });\n\n  it(\"starts out without a token\", () => {\n    var token = SessionStore.getAccessToken();\n    expect(token).toBeNull();\n  });\n});\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/stores/__tests__/ShopStoreTest.js",
    "memberof": null,
    "longname": "lib/stores/__tests__/ShopStoreTest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.dontMock(\"../../dispatcher/APIDispatcher\");\njest.dontMock(\"flux/utils\");\njest.dontMock(\"../ShopStore\");\n\nimport Constants from \"../../Constants\";\n\ndescribe(\"ShopStore\", () => {\n  var store, dispatcher, changeEvent;\n\n  beforeEach(() => {\n    store      = require(\"../ShopStore\");\n    dispatcher = store.getDispatcher();\n\n    changeEvent = jest.genMockFunction();\n    store.__emitter.emit = changeEvent;\n  });\n\n  it(\"initially has a null shop\", () => {\n    expect(store.getCurrent()).toBeNull();\n  });\n\n  it(\"sets the shop when the action is dispatched and emits the change event\", () => {\n    dispatcher.dispatch({\n      actionType: Constants.Actions.SET_SHOP,\n      items: [\"myshop\"]\n    });\n\n    expect(store.getCurrent()).toBe(\"myshop\");\n    expect(changeEvent.mock.calls.length).toBe(1);\n  });\n\n  it(\"clears the shop when the action is dispatched and emits the change event\", () => {\n    dispatcher.dispatch({\n      actionType: Constants.Actions.SET_SHOP,\n      items: [\"myshop\"]\n    });\n\n    dispatcher.dispatch({ actionType: Constants.Actions.CLEAR_SHOP });\n    expect(store.getCurrent()).toBeNull();\n    expect(changeEvent.mock.calls.length).toBe(2);\n  });\n});\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/utilities/APIProxy.js",
    "memberof": null,
    "longname": "lib/utilities/APIProxy.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nexport default function(actions, store) {\n  let wrapper = Object.create({}, {\n    store: {\n      get: () => store\n    }\n  });\n\n  actions.apiMethods.forEach(method => {\n    Object.defineProperty(wrapper, method, {\n      value: (...args) => {\n        return actions[method].call(actions, ...args);\n      }\n    });\n  });\n\n  return wrapper;\n}\n"
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "APIProxy",
    "memberof": "lib/utilities/APIProxy.js",
    "longname": "lib/utilities/APIProxy.js~APIProxy",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/utilities/APIProxy.js",
    "importStyle": "APIProxy",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "actions",
        "types": [
          "*"
        ]
      },
      {
        "name": "store",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/utilities/Actions.js",
    "memberof": null,
    "longname": "lib/utilities/Actions.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport Constants from \"../Constants\";\n\nfunction constantFor(prefix, suffix) {\n  return Constants.Actions[`${prefix}_${suffix}`];\n}\n\nexport default class {\n  /**\n   * Creates a new action object for the specified resource\n   *\n   * @param {string} resourceName - The name of the resource (plural - e.g. `products`)\n   */\n  constructor(resourceName) {\n    this._actionSuffix = resourceName.toUpperCase();\n  }\n\n  get mergeAction() {\n    return constantFor(\"MERGE\", this._actionSuffix);\n  }\n\n  get clearAction() {\n    return constantFor(\"CLEAR\", this._actionSuffix);\n  }\n\n  get countAction() {\n    return constantFor(\"COUNT\", this._actionSuffix);\n  }\n\n  get destroyAction() {\n    return constantFor(\"DESTROY\", this._actionSuffix);\n  }\n}\n"
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "constantFor",
    "memberof": "lib/utilities/Actions.js",
    "longname": "lib/utilities/Actions.js~constantFor",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/utilities/Actions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "prefix",
        "types": [
          "*"
        ]
      },
      {
        "name": "suffix",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Actions",
    "memberof": "lib/utilities/Actions.js",
    "longname": "lib/utilities/Actions.js~Actions",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/utilities/Actions.js",
    "importStyle": "Actions",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "lib/utilities/Actions.js~Actions",
    "longname": "lib/utilities/Actions.js~Actions#constructor",
    "access": null,
    "description": "Creates a new action object for the specified resource",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "resourceName",
        "description": "The name of the resource (plural - e.g. `products`)"
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_actionSuffix",
    "memberof": "lib/utilities/Actions.js~Actions",
    "longname": "lib/utilities/Actions.js~Actions#_actionSuffix",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "mergeAction",
    "memberof": "lib/utilities/Actions.js~Actions",
    "longname": "lib/utilities/Actions.js~Actions#mergeAction",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "clearAction",
    "memberof": "lib/utilities/Actions.js~Actions",
    "longname": "lib/utilities/Actions.js~Actions#clearAction",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "countAction",
    "memberof": "lib/utilities/Actions.js~Actions",
    "longname": "lib/utilities/Actions.js~Actions#countAction",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "destroyAction",
    "memberof": "lib/utilities/Actions.js~Actions",
    "longname": "lib/utilities/Actions.js~Actions#destroyAction",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/utilities/URLHelpers.js",
    "memberof": null,
    "longname": "lib/utilities/URLHelpers.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nexport default {\n  toQueryString(query) {\n    if (!query) {\n      return \"\";\n    }\n\n    return Object.keys(query).map(key => `${key}=${encodeURIComponent(query[key])}`).join(\"&\");\n  }\n};\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/utilities/WebAPI.js",
    "memberof": null,
    "longname": "lib/utilities/WebAPI.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport Constants    from \"../Constants\";\nimport SessionStore from \"../stores/SessionStore\";\n\n/**\n * A method signature for resolved request promises\n *\n * @typedef {Function} SuccessfulRequestCallback\n * @param {object} json\n *\n * @example\n * import WebAPI from \"./WebAPI\";\n *\n * WebAPI.get(\"/some/path\").then(json => {\n *   // do something with the result\n *   console.log(json);\n * });\n */\n\n/**\n * A method signature for rejected request promises\n *\n * @typedef {Function} FailedRequestCallback\n * @param {Error} error\n *\n * @example\n * import WebAPI from \"./WebAPI\";\n *\n * WebAPI.get(\"/failed/request\").catch(error => {\n *   // do something with the error\n *   console.log(error.message);\n * });\n */\n\n/**\n * A {@link Promise} that resolves with a {@link SuccessfulRequestCallback} and rejects with a {@link FailedRequestCallback}\n *\n * @typedef {Promise} RequestPromise\n */\n\nfunction _performRequest(method, url, options) {\n  options                                 = (options || {});\n  options.method                          = method;\n  options.headers                         = (options.headers || {});\n  options.headers[\"Accept\"]               = \"application/json\";\n  options.headers[\"Content-Type\"]         = \"application/json\";\n  options.headers[\"User-Agent\"]           = \"Shopify API Flux\";\n  options.headers[Constants.OAUTH_HEADER] = SessionStore.getAccessToken();\n\n  return fetch(`https://${SessionStore.getDomain()}${url}`, options).then(response => {\n    return response.json();\n  });\n}\n\n/**\n * A helper class for working with the REST API.\n *\n * In all cases, no attempt is made to trap errors. {@link RequestPromise}s are returned from each method. It's up to the\n * caller to handle rejection.\n *\n * @example\n * import WebAPI from \"./WebAPI\";\n *\n * WebAPI.get(\"/admin/products.json\")\n *   .then(json => console.log(json))\n *   .catch(error => console.log(error.message));\n */\nclass WebAPI {\n  /**\n   * Performs a GET request for the given URL and options\n   *\n   * @param {string} url - the (relative) URL to get (e.g. `/admin/products.json`)\n   * @param {object} [options] - options to pass along to the fetch call\n   *\n   * @return {RequestPromise}\n   */\n  get(url, options) {\n    return _performRequest(\"get\", url, options);\n  }\n\n  /**\n   * Performs a POST request for the given URL and options, passing the resource as the request body\n   *\n   * @param {string} url - the (relative) URL to get (e.g. `/admin/products.json`)\n   * @param {object} [resource] - the resource to post as the request body\n   * @param {object} [options] - options to pass along to the fetch call\n   *\n   * @return {RequestPromise}\n   */\n  post(url, resource, options) {\n    if (resource) {\n      options      = (options || {});\n      options.body = JSON.stringify(resource);\n    }\n\n    return _performRequest(\"post\", url, options);\n  }\n\n  /**\n   * Performs a PUT request for the given URL and options, passing the resource as the request body\n   *\n   * @param {string} url - the (relative) URL to get (e.g. `/admin/products/1.json`)\n   * @param {object} [resource] - the resource to post as the request body\n   * @param {object} [options] - options to pass along to the fetch call\n   *\n   * @return {RequestPromise}\n   */\n  put(url, resource, options) {\n    if (resource) {\n      options      = (options || {});\n      options.body = JSON.stringify(resource);\n    }\n\n    return _performRequest(\"put\", url, options);\n  }\n\n  /**\n   * Performs a DELETE request for the given URL and options\n   *\n   * @param {string} url - the (relative) URL to get (e.g. `/admin/products/1.json`)\n   * @param {object} [options] - options to pass along to the fetch call\n   *\n   * @return {RequestPromise}\n   */\n  delete(url, options) {\n    return _performRequest(\"delete\", url, options);\n  }\n}\n\n/** @ignore */\nexport default new WebAPI();\n"
  },
  {
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "SuccessfulRequestCallback",
    "memberof": "lib/utilities/WebAPI.js",
    "longname": "lib/utilities/WebAPI.js~SuccessfulRequestCallback",
    "access": null,
    "description": "A method signature for resolved request promises",
    "examples": [
      "import WebAPI from \"./WebAPI\";\n\nWebAPI.get(\"/some/path\").then(json => {\n  // do something with the result\n  console.log(json);\n});"
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Function"
      ],
      "optional": false,
      "name": "SuccessfulRequestCallback"
    }
  },
  {
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "FailedRequestCallback",
    "memberof": "lib/utilities/WebAPI.js",
    "longname": "lib/utilities/WebAPI.js~FailedRequestCallback",
    "access": null,
    "description": "A method signature for rejected request promises",
    "examples": [
      "import WebAPI from \"./WebAPI\";\n\nWebAPI.get(\"/failed/request\").catch(error => {\n  // do something with the error\n  console.log(error.message);\n});"
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Error"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Function"
      ],
      "optional": false,
      "name": "FailedRequestCallback"
    }
  },
  {
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "RequestPromise",
    "memberof": "lib/utilities/WebAPI.js",
    "longname": "lib/utilities/WebAPI.js~RequestPromise",
    "access": null,
    "description": "A {@link Promise} that resolves with a {@link SuccessfulRequestCallback} and rejects with a {@link FailedRequestCallback}",
    "lineNumber": 42,
    "type": {
      "types": [
        "Promise"
      ],
      "optional": false,
      "name": "RequestPromise"
    }
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "WebAPI",
    "memberof": "lib/utilities/WebAPI.js",
    "longname": "lib/utilities/WebAPI.js~WebAPI",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/utilities/WebAPI.js",
    "importStyle": null,
    "description": "A helper class for working with the REST API.\n\nIn all cases, no attempt is made to trap errors. {@link RequestPromise}s are returned from each method. It's up to the\ncaller to handle rejection.",
    "examples": [
      "import WebAPI from \"./WebAPI\";\n\nWebAPI.get(\"/admin/products.json\")\n  .then(json => console.log(json))\n  .catch(error => console.log(error.message));"
    ],
    "lineNumber": 69,
    "pseudoExport": true,
    "interface": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "lib/utilities/WebAPI.js~WebAPI",
    "longname": "lib/utilities/WebAPI.js~WebAPI#get",
    "access": null,
    "description": "Performs a GET request for the given URL and options",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "the (relative) URL to get (e.g. `/admin/products.json`)"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "options to pass along to the fetch call"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RequestPromise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "post",
    "memberof": "lib/utilities/WebAPI.js~WebAPI",
    "longname": "lib/utilities/WebAPI.js~WebAPI#post",
    "access": null,
    "description": "Performs a POST request for the given URL and options, passing the resource as the request body",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "the (relative) URL to get (e.g. `/admin/products.json`)"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "resource",
        "description": "the resource to post as the request body"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "options to pass along to the fetch call"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RequestPromise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "put",
    "memberof": "lib/utilities/WebAPI.js~WebAPI",
    "longname": "lib/utilities/WebAPI.js~WebAPI#put",
    "access": null,
    "description": "Performs a PUT request for the given URL and options, passing the resource as the request body",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "the (relative) URL to get (e.g. `/admin/products/1.json`)"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "resource",
        "description": "the resource to post as the request body"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "options to pass along to the fetch call"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RequestPromise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "delete",
    "memberof": "lib/utilities/WebAPI.js~WebAPI",
    "longname": "lib/utilities/WebAPI.js~WebAPI#delete",
    "access": null,
    "description": "Performs a DELETE request for the given URL and options",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "the (relative) URL to get (e.g. `/admin/products/1.json`)"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "options to pass along to the fetch call"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RequestPromise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "webAPI",
    "memberof": "lib/utilities/WebAPI.js",
    "longname": "lib/utilities/WebAPI.js~webAPI",
    "access": null,
    "export": true,
    "importPath": "shopify-api-flux/lib/utilities/WebAPI.js",
    "importStyle": "webAPI",
    "description": null,
    "lineNumber": 132,
    "ignore": true,
    "type": {
      "types": [
        "lib/utilities/WebAPI.js~WebAPI"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/utilities/__tests__/APIProxyTest.js",
    "memberof": null,
    "longname": "lib/utilities/__tests__/APIProxyTest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.dontMock(\"../APIProxy\");\njest.dontMock(\"../../resources/Base\");\njest.dontMock(\"../../resources/Product\");\n\ndescribe(\"APIProxy\", () => {\n  var api, actions, store;\n\n  beforeEach(() => {\n    const APIProxy = require(\"../APIProxy\");\n\n    actions       = require(\"../../resources/Product\");\n    actions.fetch = jest.genMockFunction();\n\n    store = require(\"../../stores/ProductsStore\");\n    api   = new APIProxy(actions, store);\n  });\n\n  it(\"decorates the proxy object with api methods\", () => {\n    let apiMethods = actions.apiMethods;\n    apiMethods.forEach(method => expect(api[method]).toBeDefined(`${method} not defined`));\n  });\n\n  it(\"proxies api method calls to the action object\", () => {\n    api.fetch();\n    expect(actions.fetch).toBeCalled();\n  });\n\n  it(\"exposes a read-only property called store\", () => {\n    expect(api.store).toBe(store);\n    expect(() => api.store = null).toThrow();\n  });\n});\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/utilities/__tests__/ActionsTest..js",
    "memberof": null,
    "longname": "lib/utilities/__tests__/ActionsTest..js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\nimport Actions   from \"../Actions\";\nimport Constants from \"../../Constants\";\n\ndescribe(\"Actions\", () => {\n  var actions;\n\n  beforeEach(() => {\n    actions = new Actions(\"products\");\n  });\n\n  describe(\"#clearAction\", () => {\n    it(\"gets the value from Constants\", () => {\n      expect(actions.clearAction).toEqual(Constants.Actions.CLEAR_PRODUCTS);\n    });\n  });\n\n  describe(\"#countAction\", () => {\n    it(\"gets the value from Constants\", () => {\n      expect(actions.countAction).toEqual(Constants.Actions.COUNT_PRODUCTS);\n    });\n  });\n\n  describe(\"#mergeAction\", () => {\n    it(\"gets the value from Constants\", () => {\n      expect(actions.mergeAction).toEqual(Constants.Actions.MERGE_PRODUCTS);\n    });\n  });\n\n  describe(\"#destroyAction\", () => {\n    it(\"gets the value from Constants\", () => {\n      expect(actions.destroyAction).toEqual(Constants.Actions.DESTROY_PRODUCTS);\n    });\n  });\n});\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/utilities/__tests__/URLHelpersTest.js",
    "memberof": null,
    "longname": "lib/utilities/__tests__/URLHelpersTest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.dontMock(\"../URLHelpers\");\n\ndescribe(\"URLHelpers\", () => {\n  var helpers = require(\"../URLHelpers\");\n\n  describe(\"#toQueryString\", () => {\n    it(\"returns falsy when the query is falsy\", () => {\n      expect(helpers.toQueryString()).toBeFalsy();\n      expect(helpers.toQueryString(\"\")).toBeFalsy();\n      expect(helpers.toQueryString(0)).toBeFalsy();\n      expect(helpers.toQueryString(null)).toBeFalsy();\n      expect(helpers.toQueryString(undefined)).toBeFalsy();\n    });\n\n    it(\"makes a query parameter for simple properties\", () => {\n      let query = { num: 0, type: \"thing\" };\n      expect(helpers.toQueryString(query)).toBe(\"num=0&type=thing\");\n    });\n\n    it(\"encodes query param values\", () => {\n      let query = { type: \"this-is&something special\" };\n      expect(helpers.toQueryString(query)).toBe(\"type=this-is%26something%20special\");\n    });\n\n    it(\"encodes arrays as comma-delimited strings\", () => {\n      let query = { ids: [1, 2, 3] };\n      expect(helpers.toQueryString(query)).toBe(\"ids=1%2C2%2C3\");\n    });\n  });\n});\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/utilities/__tests__/WebAPITest.js",
    "memberof": null,
    "longname": "lib/utilities/__tests__/WebAPITest.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\";\n\njest.dontMock(\"../WebAPI\");\n\nimport Constants from \"../../Constants\";\n\nfunction actsLikeAnAPICall(method, call) {\n  describe(\"(Common Behavior)\", () => {\n    it(`requests the specified URL using the ${method.toUpperCase()} method`, () => {\n      expect(call.url).toBe(\"https://example.myshopify.com/someurl\");\n      expect(call.options.method).toBe(method);\n    });\n\n    it(\"sets the user agent appropriately\", () => {\n      expect(call.options.headers[\"User-Agent\"]).toBe(\"Shopify API Flux\");\n    });\n\n    it(\"sets the accept header to application/json\", () => {\n      expect(call.options.headers[\"Accept\"]).toBe(\"application/json\");\n    });\n\n    it(\"sets the content type header to application/json\", () => {\n      expect(call.options.headers[\"Content-Type\"]).toBe(\"application/json\");\n    });\n\n    it(\"includes the shopify api header\", () => {\n      expect(call.options.headers[Constants.OAUTH_HEADER]).toBe(\"my_token\");\n    });\n  });\n}\n\ndescribe(\"WebAPI\", () => {\n  var SessionStore, WebAPI;\n\n  beforeEach(() => {\n    SessionStore = require(\"../../stores/SessionStore\");\n    WebAPI       = require(\"../WebAPI\");\n\n    SessionStore.getDomain.mockReturnValue(\"example.myshopify.com\");\n    SessionStore.getAccessToken.mockReturnValue(\"my_token\");\n  });\n\n  describe(\"get\", () => {\n    var call = {};\n\n    beforeEach(() => {\n      WebAPI.get(\"/someurl\", { body: JSON.stringify({ param: \"value\" }) });\n\n      call.url     = fetch.mock.calls[0][0];\n      call.options = fetch.mock.calls[0][1];\n    });\n\n    actsLikeAnAPICall(\"get\", call);\n\n    it(\"sends request body along with the request\", () => {\n      let body = JSON.stringify({ param: \"value\" });\n      expect(call.options.body).toBe(body);\n    });\n  });\n\n  describe(\"post\", () => {\n    var call = {};\n\n    beforeEach(() => {\n      WebAPI.post(\"/someurl\", { param: \"value\" });\n\n      call.url     = fetch.mock.calls[0][0];\n      call.options = fetch.mock.calls[0][1];\n    });\n\n    actsLikeAnAPICall(\"post\", call);\n\n    it(\"sends the resource as the request body\", () => {\n      let body = JSON.stringify({ param: \"value\" });\n      expect(call.options.body).toBe(body);\n    });\n  });\n\n  describe(\"put\", () => {\n    var call = {};\n\n    beforeEach(() => {\n      WebAPI.put(\"/someurl\", { param: \"value\" });\n\n      call.url     = fetch.mock.calls[0][0];\n      call.options = fetch.mock.calls[0][1];\n    });\n\n    actsLikeAnAPICall(\"put\", call);\n\n    it(\"sends the resource as the request body\", () => {\n      let body = JSON.stringify({ param: \"value\" });\n      expect(call.options.body).toBe(body);\n    });\n  });\n\n  describe(\"delete\", () => {\n    var call = {};\n\n    beforeEach(() => {\n      WebAPI.delete(\"/someurl\", { body: JSON.stringify({ param: \"value\" }) });\n\n      call.url     = fetch.mock.calls[0][0];\n      call.options = fetch.mock.calls[0][1];\n    });\n\n    actsLikeAnAPICall(\"delete\", call);\n\n    it(\"sends request body along with the request\", () => {\n      let body = JSON.stringify({ param: \"value\" });\n      expect(call.options.body).toBe(body);\n    });\n  });\n});\n"
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "actsLikeAnAPICall",
    "memberof": "lib/utilities/__tests__/WebAPITest.js",
    "longname": "lib/utilities/__tests__/WebAPITest.js~actsLikeAnAPICall",
    "access": null,
    "export": false,
    "importPath": "shopify-api-flux/lib/utilities/__tests__/WebAPITest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "method",
        "types": [
          "*"
        ]
      },
      {
        "name": "call",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": null,
    "builtinExternal": true
  }
]